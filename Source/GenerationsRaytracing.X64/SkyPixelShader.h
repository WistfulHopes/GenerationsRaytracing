#if 0
;
; Note: shader requires additional functionality:
;       Resource descriptor heap indexing
;       Sampler descriptor heap indexing
;
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0      POS   float       
; TEXCOORD                 0   xy          1     NONE   float   xy  
; TEXCOORD                 1     zw        1     NONE   float     zw
; TEXCOORD                 2   xy          2     NONE   float   xy  
; COLOR                    0   xyzw        3     NONE   float   xyzw
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Target                0   xyzw        0   TARGET   float   xyzw
;
; shader hash: f0976f9b90850ae74052802cd90d0005
;
; Pipeline Runtime Information: 
;
; Pixel Shader
; DepthOutput=0
; SampleFrequency=0
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0          noperspective       
; TEXCOORD                 0                 linear       
; TEXCOORD                 1                 linear       
; TEXCOORD                 2                 linear       
; COLOR                    0                 linear       
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Target                0                              
;
; Buffer Definitions:
;
; cbuffer GlobalsSB
; {
;
;   struct hostlayout.GlobalsSB
;   {
;
;       row_major float4x4 g_MtxProjection;           ; Offset:    0
;       row_major float4x4 g_MtxView;                 ; Offset:   64
;       float g_BackGroundScale;                      ; Offset:  128
;       uint g_DiffuseTextureId;                      ; Offset:  132
;       uint g_AlphaTextureId;                        ; Offset:  136
;       uint g_EmissionTextureId;                     ; Offset:  140
;       float4 g_Ambient;                             ; Offset:  144
;       float4 g_TexCoordOffsets[2];                  ; Offset:  160
;   
;   } GlobalsSB;                                      ; Offset:    0 Size:   192
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; GlobalsSB                         cbuffer      NA          NA     CB0            cb0     1
;
;
; ViewId state:
;
; Number of inputs: 16, outputs: 4
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 4, 5, 8, 9, 12 }
;   output 1 depends on inputs: { 4, 5, 8, 9, 13 }
;   output 2 depends on inputs: { 4, 5, 8, 9, 14 }
;   output 3 depends on inputs: { 4, 5, 6, 7, 15 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%dx.types.ResRet.f32 = type { float, float, float, float, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%hostlayout.GlobalsSB = type { [4 x <4 x float>], [4 x <4 x float>], float, i32, i32, i32, <4 x float>, [2 x <4 x float>] }

define void @main() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 2 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 13, i32 192 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %3 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %12 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %13 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %2, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %14 = extractvalue %dx.types.CBufRet.i32 %13, 1
  %15 = and i32 %14, 1048575
  %16 = lshr i32 %14, 20
  %17 = and i32 %16, 1023
  %18 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %15, i1 false, i1 true)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %19 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %18, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %20 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %17, i1 true, i1 true)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %21 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %20, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %22 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %19, %dx.types.Handle %21, float %11, float %12, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %23 = extractvalue %dx.types.ResRet.f32 %22, 0
  %24 = extractvalue %dx.types.ResRet.f32 %22, 1
  %25 = extractvalue %dx.types.ResRet.f32 %22, 2
  %26 = extractvalue %dx.types.ResRet.f32 %22, 3
  %27 = fmul fast float %23, %3
  %28 = fmul fast float %24, %4
  %29 = fmul fast float %25, %5
  %30 = fmul fast float %26, %6
  %31 = extractvalue %dx.types.CBufRet.i32 %13, 2
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %44, label %33

; <label>:33                                      ; preds = %0
  %34 = and i32 %31, 1048575
  %35 = lshr i32 %31, 20
  %36 = and i32 %35, 1023
  %37 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %34, i1 false, i1 true)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %38 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %37, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %39 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %36, i1 true, i1 true)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %40 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %39, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %41 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %38, %dx.types.Handle %40, float %9, float %10, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %42 = extractvalue %dx.types.ResRet.f32 %41, 0
  %43 = fmul fast float %42, %30
  br label %44

; <label>:44                                      ; preds = %33, %0
  %45 = phi float [ %43, %33 ], [ %30, %0 ]
  %46 = extractvalue %dx.types.CBufRet.i32 %13, 3
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %70, label %48

; <label>:48                                      ; preds = %44
  %49 = and i32 %46, 1048575
  %50 = lshr i32 %46, 20
  %51 = and i32 %50, 1023
  %52 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %49, i1 false, i1 true)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %53 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %52, %dx.types.ResourceProperties { i32 2, i32 1033 })  ; AnnotateHandle(res,props)  resource: Texture2D<4xF32>
  %54 = call %dx.types.Handle @dx.op.createHandleFromHeap(i32 218, i32 %51, i1 true, i1 true)  ; CreateHandleFromHeap(index,samplerHeap,nonUniformIndex)
  %55 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %54, %dx.types.ResourceProperties { i32 14, i32 0 })  ; AnnotateHandle(res,props)  resource: SamplerState
  %56 = call %dx.types.ResRet.f32 @dx.op.sample.f32(i32 60, %dx.types.Handle %53, %dx.types.Handle %55, float %7, float %8, float undef, float undef, i32 0, i32 0, i32 undef, float undef)  ; Sample(srv,sampler,coord0,coord1,coord2,coord3,offset0,offset1,offset2,clamp)
  %57 = extractvalue %dx.types.ResRet.f32 %56, 0
  %58 = extractvalue %dx.types.ResRet.f32 %56, 1
  %59 = extractvalue %dx.types.ResRet.f32 %56, 2
  %60 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 9)  ; CBufferLoadLegacy(handle,regIndex)
  %61 = extractvalue %dx.types.CBufRet.f32 %60, 0
  %62 = extractvalue %dx.types.CBufRet.f32 %60, 1
  %63 = extractvalue %dx.types.CBufRet.f32 %60, 2
  %64 = fmul fast float %61, %57
  %65 = fmul fast float %62, %58
  %66 = fmul fast float %63, %59
  %67 = fadd fast float %64, %27
  %68 = fadd fast float %65, %28
  %69 = fadd fast float %66, %29
  br label %70

; <label>:70                                      ; preds = %48, %44
  %71 = phi float [ %67, %48 ], [ %27, %44 ]
  %72 = phi float [ %68, %48 ], [ %28, %44 ]
  %73 = phi float [ %69, %48 ], [ %29, %44 ]
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %71)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %72)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %73)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %45)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromHeap(i32, i32, i1, i1) #0

; Function Attrs: nounwind readonly
declare %dx.types.ResRet.f32 @dx.op.sample.f32(i32, %dx.types.Handle, %dx.types.Handle, float, float, float, float, i32, i32, i32, float) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.viewIdState = !{!7}
!dx.entryPoints = !{!8}

!0 = !{!"dxcoob 1.7.2308.7 (69e54e290)"}
!1 = !{i32 1, i32 6}
!2 = !{i32 1, i32 7}
!3 = !{!"ps", i32 6, i32 6}
!4 = !{null, null, !5, null}
!5 = !{!6}
!6 = !{i32 0, %hostlayout.GlobalsSB* undef, !"", i32 0, i32 0, i32 1, i32 192, null}
!7 = !{[18 x i32] [i32 16, i32 4, i32 0, i32 0, i32 0, i32 0, i32 15, i32 15, i32 8, i32 8, i32 7, i32 7, i32 0, i32 0, i32 1, i32 2, i32 4, i32 8]}
!8 = !{void ()* @main, !"main", !9, !4, !23}
!9 = !{!10, !21, null}
!10 = !{!11, !13, !15, !17, !19}
!11 = !{i32 0, !"SV_Position", i8 9, i8 3, !12, i8 4, i32 1, i8 4, i32 0, i8 0, null}
!12 = !{i32 0}
!13 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !12, i8 2, i32 1, i8 2, i32 1, i8 0, !14}
!14 = !{i32 3, i32 3}
!15 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !16, i8 2, i32 1, i8 2, i32 1, i8 2, !14}
!16 = !{i32 1}
!17 = !{i32 3, !"TEXCOORD", i8 9, i8 0, !18, i8 2, i32 1, i8 2, i32 2, i8 0, !14}
!18 = !{i32 2}
!19 = !{i32 4, !"COLOR", i8 9, i8 0, !12, i8 2, i32 1, i8 4, i32 3, i8 0, !20}
!20 = !{i32 3, i32 15}
!21 = !{!22}
!22 = !{i32 0, !"SV_Target", i8 9, i8 16, !12, i8 0, i32 1, i8 4, i32 0, i8 0, !20}
!23 = !{i32 0, i64 3221225472}

#endif

const unsigned char SkyPixelShader[] = {
  0x44, 0x58, 0x42, 0x43, 0xc6, 0x30, 0x06, 0xe1, 0x4f, 0xcd, 0xcf, 0x54,
  0xe1, 0x59, 0x44, 0xfe, 0xed, 0x26, 0xfe, 0x29, 0x01, 0x00, 0x00, 0x00,
  0x14, 0x15, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00,
  0x4c, 0x00, 0x00, 0x00, 0x18, 0x01, 0x00, 0x00, 0x54, 0x01, 0x00, 0x00,
  0x8c, 0x02, 0x00, 0x00, 0x40, 0x0b, 0x00, 0x00, 0x5c, 0x0b, 0x00, 0x00,
  0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31, 0xc4, 0x00, 0x00, 0x00,
  0x05, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xa8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x0c, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xb4, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbd, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00,
  0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c,
  0x4f, 0x52, 0x00, 0x00, 0x4f, 0x53, 0x47, 0x31, 0x34, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65,
  0x74, 0x00, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30, 0x30, 0x01, 0x00, 0x00,
  0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x05, 0x01, 0x00, 0x04,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x24, 0x00, 0x00, 0x00, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52,
  0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54,
  0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f,
  0x52, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x03,
  0x03, 0x04, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x62, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x02, 0x42, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x03, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x10, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
  0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x53, 0x54, 0x41, 0x54, 0xac, 0x08, 0x00, 0x00,
  0x66, 0x00, 0x00, 0x00, 0x2b, 0x02, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x06, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x94, 0x08, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0x22, 0x02, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff,
  0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0x98, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a,
  0x66, 0x00, 0xe6, 0x08, 0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10,
  0x44, 0x41, 0x90, 0x51, 0x0c, 0x80, 0x20, 0x88, 0x62, 0x20, 0x84, 0x8a,
  0x7b, 0x86, 0xcb, 0x9f, 0xb0, 0x87, 0x90, 0xfc, 0x10, 0x68, 0x86, 0x85,
  0x40, 0x81, 0x32, 0x47, 0x10, 0x94, 0x62, 0x21, 0x08, 0x86, 0xa1, 0xe6,
  0xa6, 0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24, 0x7f, 0x25, 0xa4, 0x95, 0x98,
  0xfc, 0xe2, 0xb6, 0x51, 0x31, 0x0c, 0xc3, 0x40, 0x14, 0xe6, 0x21, 0x96,
  0x65, 0x18, 0x86, 0x81, 0x20, 0x88, 0x81, 0xa0, 0xa3, 0x86, 0xcb, 0x9f,
  0xb0, 0x87, 0x90, 0x7c, 0x6e, 0xa3, 0x8a, 0x95, 0x98, 0xfc, 0xe2, 0xb6,
  0x11, 0x31, 0x0c, 0xc3, 0x50, 0x08, 0x89, 0x58, 0x08, 0x9a, 0x8e, 0x1a,
  0x2e, 0x7f, 0xc2, 0x1e, 0x42, 0xf2, 0xb9, 0x8d, 0x2a, 0x56, 0x62, 0xf2,
  0x91, 0xdb, 0x46, 0x04, 0x41, 0x10, 0x44, 0x21, 0x2a, 0x62, 0x21, 0xc8,
  0xba, 0x6d, 0xb8, 0xfc, 0x09, 0x7b, 0x08, 0xc9, 0x5f, 0x09, 0xc9, 0xa1,
  0x22, 0x81, 0x48, 0x23, 0xe7, 0x21, 0xa2, 0x09, 0x21, 0x24, 0x24, 0x10,
  0x44, 0x21, 0x16, 0x62, 0xc1, 0x28, 0x3b, 0x68, 0xb8, 0xfc, 0x09, 0x7b,
  0x08, 0xc9, 0x5f, 0x09, 0x69, 0x43, 0x9a, 0x01, 0x11, 0x04, 0x41, 0x14,
  0xa5, 0x58, 0x88, 0x8d, 0x60, 0x88, 0x1b, 0x08, 0x18, 0x46, 0x20, 0x86,
  0x24, 0xf8, 0x52, 0xe0, 0x3b, 0xea, 0x70, 0xa4, 0x69, 0x01, 0x30, 0x87,
  0x9a, 0x7c, 0x70, 0x71, 0x02, 0x60, 0x91, 0xd8, 0x0d, 0x21, 0x20, 0x38,
  0x10, 0x04, 0xf1, 0x85, 0x24, 0xa6, 0x04, 0x31, 0x47, 0x00, 0x0a, 0x00,
  0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87, 0x36, 0x68, 0x87, 0x79,
  0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50, 0x0e, 0x6d, 0xd0, 0x0e,
  0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0, 0x07, 0x73, 0x20, 0x07,
  0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e,
  0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe9, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x76, 0x40, 0x07,
  0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10, 0x07, 0x76, 0xa0, 0x07,
  0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0, 0x07, 0x76, 0x40, 0x07,
  0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07,
  0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x43, 0x9e, 0x00, 0x08, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x3c, 0x06, 0x10, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x79, 0x10, 0x20,
  0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0xf2, 0x34,
  0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xe4,
  0x81, 0x80, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,
  0xc8, 0x33, 0x01, 0x01, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc0, 0x90, 0xc7, 0x02, 0x02, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x80, 0x21, 0x4f, 0x06, 0x04, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x43, 0x1e, 0x0e, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xb2, 0x40, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00,
  0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90, 0x8c, 0x09, 0x26, 0x47,
  0xc6, 0x04, 0x43, 0x22, 0x4a, 0xa0, 0x18, 0x46, 0x00, 0x0a, 0x70, 0xa0,
  0x08, 0x0a, 0xa1, 0x0c, 0xca, 0xa1, 0x24, 0x0a, 0x30, 0xa0, 0x00, 0x05,
  0x0a, 0x51, 0xa0, 0x14, 0x0a, 0x52, 0xa0, 0x30, 0x05, 0x0a, 0x54, 0xa0,
  0x80, 0x05, 0xca, 0xa3, 0x2c, 0x8a, 0x33, 0xa0, 0x28, 0xa8, 0x28, 0x89,
  0x32, 0x28, 0x84, 0x11, 0x80, 0x22, 0x28, 0x10, 0x62, 0x6a, 0x80, 0xca,
  0x02, 0x04, 0x04, 0x04, 0xc4, 0xa0, 0x71, 0x06, 0x80, 0xc8, 0xb1, 0x24,
  0x88, 0x00, 0x00, 0x00, 0x78, 0x1e, 0x04, 0x39, 0x0e, 0x00, 0x08, 0x04,
  0x02, 0x21, 0x71, 0x06, 0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00,
  0xd7, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4,
  0x8e, 0x0c, 0x6f, 0xec, 0xed, 0x4d, 0x0c, 0x24, 0xc6, 0xe5, 0xc6, 0x45,
  0x66, 0x06, 0x06, 0xc7, 0xe5, 0x06, 0x04, 0xc5, 0x26, 0xa7, 0xac, 0x86,
  0xa6, 0x4c, 0x26, 0x07, 0x26, 0x65, 0x43, 0x10, 0x4c, 0x10, 0x88, 0x64,
  0x82, 0x40, 0x28, 0x1b, 0x84, 0x81, 0x98, 0x20, 0x10, 0xcb, 0x06, 0xc1,
  0x30, 0x28, 0xc0, 0xcd, 0x6d, 0x18, 0x10, 0x82, 0x98, 0x20, 0x8c, 0x81,
  0x19, 0x30, 0x39, 0x62, 0x7b, 0x13, 0x0b, 0x63, 0x9b, 0x9b, 0x12, 0x9a,
  0x20, 0x10, 0xcc, 0x06, 0xc4, 0x50, 0x16, 0xc3, 0x18, 0x18, 0x60, 0x43,
  0xd0, 0x6c, 0x20, 0x00, 0xc0, 0x01, 0x26, 0x08, 0x62, 0x80, 0x06, 0x7c,
  0xce, 0xbe, 0x9a, 0xe8, 0xf0, 0xa0, 0xe4, 0xde, 0xd4, 0xca, 0xc6, 0xe8,
  0xd2, 0xde, 0xdc, 0x26, 0x08, 0x44, 0x33, 0x41, 0x20, 0x9c, 0x0d, 0xc3,
  0x34, 0x0d, 0x13, 0x04, 0xe2, 0x99, 0x20, 0x10, 0xd0, 0x04, 0x81, 0x88,
  0x36, 0x20, 0x44, 0x24, 0x51, 0x95, 0x61, 0x5d, 0x4c, 0xce, 0xbe, 0x9a,
  0xe8, 0xf0, 0xac, 0xd2, 0xca, 0xee, 0x26, 0x08, 0x84, 0xb4, 0x01, 0x21,
  0x32, 0x89, 0xaa, 0x34, 0xeb, 0x62, 0x74, 0xf6, 0x25, 0x14, 0x36, 0xb6,
  0x76, 0x24, 0xf7, 0x56, 0xe7, 0x46, 0x36, 0x35, 0x16, 0xc6, 0x56, 0x36,
  0x41, 0x20, 0xa6, 0x0d, 0x06, 0xc1, 0x55, 0x9d, 0x75, 0x51, 0x3a, 0xfb,
  0x22, 0x4a, 0x33, 0x33, 0xab, 0x9b, 0x2b, 0xa3, 0x2a, 0xc3, 0xa3, 0xab,
  0x93, 0x2b, 0x4b, 0x22, 0x9b, 0x20, 0x10, 0xd4, 0x04, 0x81, 0xa8, 0x26,
  0x08, 0x0c, 0x19, 0x6c, 0x40, 0x88, 0xaf, 0x02, 0x03, 0x2b, 0x0c, 0x2e,
  0x31, 0x20, 0x74, 0xf6, 0x15, 0xc4, 0x06, 0x87, 0x16, 0x46, 0x55, 0x86,
  0x47, 0x57, 0x27, 0x57, 0x96, 0x44, 0x36, 0x41, 0x20, 0xac, 0x0d, 0x08,
  0x41, 0x06, 0x55, 0x19, 0x58, 0x61, 0x70, 0x89, 0x01, 0xa7, 0xb3, 0xaf,
  0xa2, 0xb6, 0xb4, 0xb9, 0xb9, 0xb4, 0x37, 0x37, 0xaa, 0x32, 0x3c, 0xba,
  0x3a, 0xb9, 0xb2, 0x24, 0xb2, 0x09, 0x02, 0x71, 0x6d, 0x40, 0x88, 0x33,
  0xa8, 0xd0, 0xc0, 0x0a, 0x83, 0x4b, 0x0c, 0x98, 0x9c, 0x7d, 0x05, 0xb5,
  0x89, 0xa5, 0x95, 0xb9, 0xd1, 0x4d, 0x10, 0x08, 0x6c, 0x03, 0x42, 0xa8,
  0x41, 0xb5, 0x06, 0xd6, 0x75, 0x89, 0x01, 0xa3, 0xb3, 0x2f, 0xaa, 0x32,
  0xbc, 0xa1, 0xb7, 0x37, 0x39, 0xb2, 0x27, 0x33, 0xb3, 0xb9, 0x32, 0xba,
  0xb9, 0x09, 0x02, 0x91, 0x6d, 0x30, 0x88, 0x36, 0xa8, 0xdc, 0xc0, 0xba,
  0x36, 0x24, 0x0c, 0xb6, 0x79, 0x63, 0x60, 0x06, 0x69, 0xc0, 0x06, 0x6f,
  0xb0, 0x61, 0x30, 0x20, 0x38, 0x98, 0x20, 0x08, 0xc0, 0x06, 0x60, 0xc3,
  0x60, 0xcc, 0xc1, 0x1c, 0x6c, 0x08, 0xe8, 0x60, 0xc3, 0x30, 0xc8, 0x41,
  0x1d, 0x4c, 0x10, 0xc8, 0xe0, 0x0c, 0x36, 0x04, 0x77, 0x40, 0xa2, 0x2d,
  0x2c, 0xcd, 0x8d, 0xcb, 0x94, 0xd5, 0x17, 0xd4, 0xdb, 0x5c, 0x1a, 0x5d,
  0xda, 0x9b, 0xdb, 0x04, 0xa1, 0xf0, 0x26, 0x08, 0xc5, 0xb7, 0x21, 0x30,
  0x26, 0x08, 0x05, 0x18, 0x4c, 0x10, 0x8a, 0x30, 0xd8, 0xb0, 0x18, 0x7a,
  0xb0, 0x07, 0x7c, 0xd0, 0x07, 0x7e, 0x30, 0xf8, 0x81, 0xf1, 0x07, 0x00,
  0x11, 0xaa, 0x22, 0xac, 0xa1, 0xa7, 0x27, 0x29, 0xa2, 0x09, 0x42, 0x21,
  0x06, 0x1b, 0x84, 0xaa, 0xda, 0xb0, 0x0c, 0xa1, 0xb0, 0x07, 0x7f, 0xd0,
  0x07, 0xa2, 0x30, 0x88, 0xc2, 0xf0, 0x07, 0xa3, 0xb0, 0x21, 0x18, 0x36,
  0x2c, 0x52, 0x28, 0xec, 0xc1, 0x1f, 0x94, 0x82, 0x28, 0x0c, 0xa2, 0x30,
  0x88, 0xc2, 0x28, 0x6c, 0x08, 0xa4, 0x0d, 0x4b, 0x15, 0x0a, 0x7b, 0xf0,
  0x07, 0xa7, 0x20, 0x0a, 0x83, 0x28, 0x48, 0x7f, 0x30, 0x0a, 0x2c, 0x86,
  0x9e, 0x98, 0x9e, 0xa4, 0x26, 0x08, 0x84, 0xb6, 0x41, 0xa8, 0x54, 0x61,
  0xc3, 0x32, 0xa5, 0xc2, 0x1e, 0xfc, 0x41, 0x1f, 0x88, 0xc2, 0xe0, 0x07,
  0xd5, 0x1f, 0xac, 0xc2, 0x86, 0x02, 0x14, 0x48, 0xc1, 0x14, 0x50, 0x81,
  0x15, 0x98, 0x4c, 0x59, 0x7d, 0x51, 0x85, 0xc9, 0x9d, 0x95, 0xd1, 0x4d,
  0x10, 0x8a, 0x31, 0xd8, 0xb0, 0x18, 0xae, 0xb0, 0x07, 0xaf, 0xd0, 0x07,
  0x7f, 0x30, 0xf8, 0x81, 0xf1, 0x07, 0xab, 0xb0, 0x21, 0x80, 0x85, 0x0d,
  0x43, 0x2b, 0xc4, 0x02, 0x30, 0x41, 0x28, 0x83, 0x32, 0xd8, 0x20, 0x18,
  0xb3, 0xb0, 0xa1, 0x90, 0x83, 0x3c, 0x90, 0x85, 0x87, 0x16, 0x88, 0x88,
  0xc9, 0x85, 0xb9, 0x8d, 0xa1, 0x95, 0xcd, 0xd1, 0x30, 0x63, 0x7b, 0x0b,
  0xa3, 0x9b, 0x9b, 0x20, 0x10, 0x1b, 0x8b, 0x34, 0xb7, 0x39, 0xba, 0xb9,
  0x09, 0x02, 0xc1, 0x91, 0x48, 0x73, 0xa3, 0x9b, 0xa3, 0x31, 0x97, 0x76,
  0xf6, 0xc5, 0x46, 0x36, 0x41, 0x20, 0x3a, 0x1a, 0x73, 0x69, 0x67, 0x5f,
  0x73, 0x74, 0x44, 0xe8, 0xca, 0xf0, 0xbe, 0xdc, 0xde, 0xe4, 0xda, 0x58,
  0xd4, 0xa5, 0xb9, 0xd1, 0xcd, 0x6d, 0x80, 0x6c, 0x41, 0xba, 0x05, 0x5c,
  0xc8, 0x05, 0x5d, 0xd8, 0x05, 0x89, 0x17, 0x7a, 0xc1, 0x17, 0xa6, 0x5f,
  0xa8, 0xc0, 0xe1, 0xaa, 0xc2, 0xc6, 0x66, 0xd7, 0xe6, 0x92, 0x46, 0x56,
  0xe6, 0x46, 0x37, 0x25, 0x08, 0xaa, 0x90, 0xe1, 0xb9, 0xd8, 0x95, 0xc9,
  0xcd, 0xa5, 0xbd, 0xb9, 0x4d, 0x09, 0x88, 0x26, 0x64, 0x78, 0x2e, 0x76,
  0x61, 0x6c, 0x76, 0x65, 0x72, 0x53, 0x02, 0xa3, 0x0e, 0x19, 0x9e, 0xcb,
  0x1c, 0x5a, 0x18, 0x59, 0x99, 0x5c, 0xd3, 0x1b, 0x59, 0x19, 0xdb, 0x94,
  0x00, 0x29, 0x43, 0x86, 0xe7, 0x22, 0x57, 0x36, 0xf7, 0x56, 0x27, 0x37,
  0x56, 0x36, 0x37, 0x25, 0x70, 0x2a, 0x91, 0xe1, 0xb9, 0xd0, 0xe5, 0xc1,
  0x95, 0x05, 0xb9, 0xb9, 0xbd, 0xd1, 0x85, 0xd1, 0xa5, 0xbd, 0xb9, 0xcd,
  0x4d, 0x11, 0xe0, 0xa0, 0x0e, 0xea, 0x90, 0xe1, 0xb9, 0xd8, 0xa5, 0x95,
  0xdd, 0x25, 0x91, 0x4d, 0xd1, 0x85, 0xd1, 0x95, 0x4d, 0x09, 0xee, 0xa0,
  0x0e, 0x19, 0x9e, 0x4b, 0x99, 0x1b, 0x9d, 0x5c, 0x1e, 0xd4, 0x5b, 0x9a,
  0x1b, 0xdd, 0xdc, 0x94, 0x80, 0x16, 0xba, 0x90, 0xe1, 0xb9, 0x8c, 0xbd,
  0xd5, 0xb9, 0xd1, 0x95, 0xc9, 0xcd, 0x4d, 0x09, 0xc0, 0x01, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8,
  0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2,
  0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x30, 0xc3, 0x81,
  0xc8, 0x01, 0x1f, 0xdc, 0xc0, 0x1d, 0xde, 0xc1, 0x1d, 0xea, 0xc1, 0x1d,
  0xd2, 0xc1, 0x1c, 0xde, 0x41, 0x1e, 0xda, 0x61, 0x06, 0x13, 0x91, 0x03,
  0x3e, 0xb8, 0x81, 0x38, 0xc8, 0x43, 0x39, 0x84, 0xc3, 0x3a, 0xb8, 0x81,
  0x38, 0xc8, 0x03, 0x00, 0x71, 0x20, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00,
  0x76, 0x40, 0x0d, 0x97, 0xef, 0x3c, 0x3e, 0xd0, 0x34, 0xce, 0x04, 0x4c,
  0x44, 0x08, 0x34, 0xc3, 0x42, 0x58, 0xc1, 0x36, 0x5c, 0xbe, 0xf3, 0xf8,
  0x42, 0x40, 0x15, 0x05, 0x11, 0x95, 0x0e, 0x30, 0x94, 0x84, 0x01, 0x08,
  0x98, 0x5f, 0xdc, 0xb6, 0x19, 0x6c, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x04,
  0x54, 0x51, 0x10, 0x51, 0xe9, 0x00, 0x43, 0x49, 0x18, 0x80, 0x80, 0xf9,
  0xc8, 0x6d, 0x1b, 0x42, 0x37, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x44, 0x00,
  0x13, 0x11, 0x02, 0xcd, 0xb0, 0x10, 0x5f, 0xe4, 0x30, 0x1b, 0xd2, 0x0c,
  0x48, 0x63, 0xd8, 0x80, 0x36, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x44, 0x00,
  0x13, 0x11, 0x02, 0xcd, 0xb0, 0x10, 0x5f, 0xe4, 0x30, 0x21, 0x01, 0x3c,
  0x16, 0x30, 0x0d, 0x97, 0xef, 0x3c, 0xfe, 0xe2, 0x00, 0x83, 0xd8, 0x3c,
  0xd4, 0xe4, 0x17, 0xb7, 0x6d, 0x04, 0xd0, 0x70, 0xf9, 0xce, 0xe3, 0x4b,
  0x00, 0xf3, 0x2c, 0x84, 0x5f, 0xdc, 0xb6, 0x09, 0x54, 0xc3, 0xe5, 0x3b,
  0x8f, 0x2f, 0x4d, 0x4e, 0x44, 0xa0, 0xd4, 0xf4, 0x50, 0x93, 0x5f, 0xdc,
  0xb6, 0x01, 0x10, 0x0c, 0x80, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xf0, 0x97, 0x6f, 0x9b, 0x90, 0x85, 0x0a, 0xe7, 0x40, 0x52, 0x80, 0x2c,
  0xd9, 0x0d, 0x00, 0x05, 0x44, 0x58, 0x49, 0x4c, 0xb0, 0x09, 0x00, 0x00,
  0x66, 0x00, 0x00, 0x00, 0x6c, 0x02, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x06, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x98, 0x09, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0x63, 0x02, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff,
  0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0x9c, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a,
  0x66, 0x00, 0xe6, 0x08, 0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10,
  0x44, 0x41, 0x90, 0x51, 0x0c, 0x80, 0x20, 0x88, 0x62, 0x20, 0x84, 0x8a,
  0x7b, 0x86, 0xcb, 0x9f, 0xb0, 0x87, 0x90, 0xfc, 0x10, 0x68, 0x86, 0x85,
  0x40, 0x81, 0x32, 0x47, 0x10, 0x94, 0x62, 0x21, 0x08, 0x86, 0xa1, 0xe6,
  0xa6, 0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24, 0x7f, 0x25, 0xa4, 0x95, 0x98,
  0xfc, 0xe2, 0xb6, 0x51, 0x31, 0x0c, 0xc3, 0x40, 0x14, 0xe6, 0x21, 0x96,
  0x65, 0x18, 0x86, 0x81, 0x20, 0x88, 0x81, 0xa0, 0xa3, 0x86, 0xcb, 0x9f,
  0xb0, 0x87, 0x90, 0x7c, 0x6e, 0xa3, 0x8a, 0x95, 0x98, 0xfc, 0xe2, 0xb6,
  0x11, 0x31, 0x0c, 0xc3, 0x50, 0x08, 0x89, 0x58, 0x08, 0x9a, 0x8e, 0x1a,
  0x2e, 0x7f, 0xc2, 0x1e, 0x42, 0xf2, 0xb9, 0x8d, 0x2a, 0x56, 0x62, 0xf2,
  0x91, 0xdb, 0x46, 0x04, 0x41, 0x10, 0x44, 0x21, 0x2a, 0x62, 0x21, 0xc8,
  0xba, 0x6d, 0xb8, 0xfc, 0x09, 0x7b, 0x08, 0xc9, 0x5f, 0x09, 0xc9, 0xa1,
  0x22, 0x81, 0x48, 0x23, 0xe7, 0x21, 0xa2, 0x09, 0x21, 0x24, 0x24, 0x10,
  0x44, 0x21, 0x16, 0x62, 0xc1, 0x28, 0x3b, 0x68, 0xb8, 0xfc, 0x09, 0x7b,
  0x08, 0xc9, 0x5f, 0x09, 0x69, 0x43, 0x9a, 0x01, 0x11, 0x04, 0x41, 0x14,
  0xa5, 0x58, 0x88, 0x8d, 0x60, 0x88, 0x1b, 0x08, 0x18, 0x46, 0x20, 0x86,
  0x24, 0xf8, 0x52, 0xe0, 0x3b, 0xea, 0x70, 0xa4, 0x69, 0x01, 0x30, 0x87,
  0x9a, 0x7c, 0x70, 0x71, 0x02, 0x60, 0x91, 0xd8, 0x0d, 0x21, 0x20, 0x38,
  0x10, 0x04, 0xf1, 0x85, 0x24, 0xa6, 0x04, 0x31, 0x47, 0x00, 0x0a, 0x53,
  0x00, 0x00, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50,
  0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90,
  0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0,
  0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x43, 0x9e,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86,
  0x3c, 0x06, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0c, 0x79, 0x10, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x18, 0xf2, 0x34, 0x40, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x30, 0xe4, 0x81, 0x80, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x60, 0xc8, 0x33, 0x01, 0x01, 0x30, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0xc7, 0x02, 0x02, 0x60, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x4f, 0x06, 0x04, 0x40, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x1e, 0x0e, 0x08, 0x80,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb2, 0x40, 0x00, 0x00,
  0x12, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22, 0x4a, 0xa0, 0x18, 0xca,
  0x61, 0x04, 0xa0, 0x00, 0x07, 0xca, 0xa0, 0x08, 0x0a, 0xa1, 0x3c, 0xa8,
  0x28, 0x89, 0x32, 0x28, 0x84, 0x11, 0x80, 0x22, 0x28, 0x10, 0x2a, 0x0b,
  0x10, 0x10, 0x10, 0x10, 0x83, 0xc8, 0xb1, 0x24, 0x88, 0x00, 0x00, 0x00,
  0x78, 0x1e, 0x04, 0x39, 0x0e, 0x00, 0x08, 0x04, 0x02, 0xa1, 0x71, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4, 0x8e, 0x0c, 0x6f, 0xec,
  0xed, 0x4d, 0x0c, 0x24, 0xc6, 0xe5, 0xc6, 0x45, 0x66, 0x06, 0x06, 0xc7,
  0xe5, 0x06, 0x04, 0xc5, 0x26, 0xa7, 0xac, 0x86, 0xa6, 0x4c, 0x26, 0x07,
  0x26, 0x65, 0x43, 0x10, 0x4c, 0x10, 0x88, 0x64, 0x82, 0x40, 0x28, 0x1b,
  0x84, 0x81, 0x98, 0x20, 0x10, 0xcb, 0x06, 0x61, 0x30, 0x28, 0xc0, 0xcd,
  0x6d, 0x18, 0x10, 0x82, 0x98, 0x20, 0x10, 0xcc, 0x04, 0x61, 0x0c, 0x34,
  0x02, 0x13, 0x04, 0xa2, 0xd9, 0x80, 0x28, 0x0b, 0xa3, 0x28, 0x43, 0x03,
  0x6c, 0x08, 0x9c, 0x0d, 0x04, 0x00, 0x3c, 0xc0, 0x04, 0x81, 0x0c, 0xb2,
  0x0d, 0x41, 0x34, 0x41, 0x10, 0x00, 0x12, 0x6d, 0x61, 0x69, 0x6e, 0x5c,
  0xa6, 0xac, 0xbe, 0xa0, 0xde, 0xe6, 0xd2, 0xe8, 0xd2, 0xde, 0xdc, 0x26,
  0x08, 0x85, 0x34, 0x41, 0x28, 0xa6, 0x0d, 0x81, 0x32, 0x41, 0x28, 0xa8,
  0x09, 0x42, 0x51, 0x6d, 0x58, 0x94, 0xca, 0xba, 0xb0, 0x6c, 0xc8, 0x14,
  0x0d, 0x20, 0x42, 0x55, 0x84, 0x35, 0xf4, 0xf4, 0x24, 0x45, 0x34, 0x41,
  0x28, 0xac, 0x09, 0x02, 0xe1, 0x6c, 0x10, 0x3c, 0x6f, 0xc3, 0x32, 0x70,
  0x96, 0x86, 0x75, 0x43, 0x37, 0x68, 0xdf, 0x04, 0x81, 0x78, 0x36, 0x04,
  0xc3, 0x86, 0x25, 0x0c, 0x38, 0x4b, 0x13, 0x83, 0x6e, 0xe8, 0x86, 0xee,
  0xdb, 0x10, 0x84, 0xc1, 0x86, 0xc5, 0xe3, 0x2c, 0x8d, 0x0c, 0xba, 0xa1,
  0x0b, 0x03, 0xed, 0x9b, 0x20, 0x10, 0x10, 0x8b, 0xa1, 0x27, 0xa6, 0x27,
  0xa9, 0x09, 0x02, 0x11, 0x6d, 0x10, 0x3c, 0x34, 0xd8, 0xb0, 0x98, 0xc1,
  0x19, 0x58, 0x1a, 0xd6, 0x0d, 0x99, 0xa7, 0xa5, 0xc1, 0x86, 0x62, 0x03,
  0x83, 0x31, 0x28, 0x03, 0x35, 0x60, 0x32, 0x65, 0xf5, 0x45, 0x15, 0x26,
  0x77, 0x56, 0x46, 0x37, 0x41, 0x28, 0xae, 0x0d, 0x8b, 0xc2, 0x06, 0x56,
  0x1b, 0x60, 0xda, 0x90, 0x29, 0x5a, 0x1a, 0x6c, 0x08, 0xdc, 0x60, 0xc3,
  0xb0, 0x06, 0x6f, 0x00, 0x4c, 0x10, 0xca, 0x00, 0xdb, 0x20, 0x28, 0x71,
  0xb0, 0xa1, 0x98, 0x28, 0x38, 0x80, 0xe4, 0xa0, 0x0a, 0x1b, 0x9b, 0x5d,
  0x9b, 0x4b, 0x1a, 0x59, 0x99, 0x1b, 0xdd, 0x94, 0x20, 0xa8, 0x42, 0x86,
  0xe7, 0x62, 0x57, 0x26, 0x37, 0x97, 0xf6, 0xe6, 0x36, 0x25, 0x20, 0x9a,
  0x90, 0xe1, 0xb9, 0xd8, 0x85, 0xb1, 0xd9, 0x95, 0xc9, 0x4d, 0x09, 0x8c,
  0x3a, 0x64, 0x78, 0x2e, 0x73, 0x68, 0x61, 0x64, 0x65, 0x72, 0x4d, 0x6f,
  0x64, 0x65, 0x6c, 0x53, 0x02, 0xa4, 0x0c, 0x19, 0x9e, 0x8b, 0x5c, 0xd9,
  0xdc, 0x5b, 0x9d, 0xdc, 0x58, 0xd9, 0xdc, 0x94, 0xe0, 0xa9, 0x43, 0x86,
  0xe7, 0x62, 0x97, 0x56, 0x76, 0x97, 0x44, 0x36, 0x45, 0x17, 0x46, 0x57,
  0x36, 0x25, 0x88, 0xea, 0x90, 0xe1, 0xb9, 0x94, 0xb9, 0xd1, 0xc9, 0xe5,
  0x41, 0xbd, 0xa5, 0xb9, 0xd1, 0xcd, 0x4d, 0x09, 0xe4, 0x00, 0x00, 0x00,
  0x79, 0x18, 0x00, 0x00, 0x56, 0x00, 0x00, 0x00, 0x33, 0x08, 0x80, 0x1c,
  0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88, 0x43, 0x38, 0x84, 0xc3,
  0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73, 0x98, 0x71, 0x0c, 0xe6,
  0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e, 0x33, 0x0c, 0x42, 0x1e,
  0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30, 0x05, 0x3d, 0x88, 0x43,
  0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8, 0x43, 0x3d, 0x8c, 0x03,
  0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b, 0x08, 0x07, 0x79, 0x48,
  0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76, 0x78, 0x87, 0x70, 0x20,
  0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e, 0xe1, 0x30, 0x0f, 0x6e,
  0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e, 0x33, 0x10, 0xc4, 0x1d,
  0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61, 0x1e, 0x66, 0x30, 0x89,
  0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4, 0x03, 0x3c, 0xbc, 0x83,
  0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76, 0x60, 0x07, 0x7b, 0x68,
  0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37, 0x80, 0x87, 0x70, 0x90,
  0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76, 0xf8, 0x05, 0x76, 0x78,
  0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71, 0x18, 0x87, 0x72, 0x98,
  0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e, 0xee, 0xe0, 0x0e, 0xf5,
  0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c,
  0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61, 0x1c, 0xca, 0x21, 0x1c,
  0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90, 0x43, 0x39, 0xc8, 0x43,
  0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8, 0xc3, 0x38, 0x94, 0x43,
  0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc, 0x83, 0x3c, 0xfc, 0x82,
  0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4, 0x21, 0x07, 0x7c, 0x70,
  0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19, 0xd1, 0x43, 0x0e, 0xf8,
  0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06, 0xf6, 0x10, 0x0e, 0xf2,
  0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f, 0xf4, 0x30, 0xc3, 0x81,
  0xc8, 0x01, 0x1f, 0xdc, 0xc0, 0x1d, 0xde, 0xc1, 0x1d, 0xea, 0xc1, 0x1d,
  0xd2, 0xc1, 0x1c, 0xde, 0x41, 0x1e, 0xda, 0x61, 0x06, 0x13, 0x91, 0x03,
  0x3e, 0xb8, 0x81, 0x38, 0xc8, 0x43, 0x39, 0x84, 0xc3, 0x3a, 0xb8, 0x81,
  0x38, 0xc8, 0x03, 0x00, 0x71, 0x20, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00,
  0x76, 0x40, 0x0d, 0x97, 0xef, 0x3c, 0x3e, 0xd0, 0x34, 0xce, 0x04, 0x4c,
  0x44, 0x08, 0x34, 0xc3, 0x42, 0x58, 0xc1, 0x36, 0x5c, 0xbe, 0xf3, 0xf8,
  0x42, 0x40, 0x15, 0x05, 0x11, 0x95, 0x0e, 0x30, 0x94, 0x84, 0x01, 0x08,
  0x98, 0x5f, 0xdc, 0xb6, 0x19, 0x6c, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x04,
  0x54, 0x51, 0x10, 0x51, 0xe9, 0x00, 0x43, 0x49, 0x18, 0x80, 0x80, 0xf9,
  0xc8, 0x6d, 0x1b, 0x42, 0x37, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x44, 0x00,
  0x13, 0x11, 0x02, 0xcd, 0xb0, 0x10, 0x5f, 0xe4, 0x30, 0x1b, 0xd2, 0x0c,
  0x48, 0x63, 0xd8, 0x80, 0x36, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x44, 0x00,
  0x13, 0x11, 0x02, 0xcd, 0xb0, 0x10, 0x5f, 0xe4, 0x30, 0x21, 0x01, 0x3c,
  0x16, 0x30, 0x0d, 0x97, 0xef, 0x3c, 0xfe, 0xe2, 0x00, 0x83, 0xd8, 0x3c,
  0xd4, 0xe4, 0x17, 0xb7, 0x6d, 0x04, 0xd0, 0x70, 0xf9, 0xce, 0xe3, 0x4b,
  0x00, 0xf3, 0x2c, 0x84, 0x5f, 0xdc, 0xb6, 0x09, 0x54, 0xc3, 0xe5, 0x3b,
  0x8f, 0x2f, 0x4d, 0x4e, 0x44, 0xa0, 0xd4, 0xf4, 0x50, 0x93, 0x5f, 0xdc,
  0xb6, 0x01, 0x10, 0x0c, 0x80, 0x34, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00,
  0xb7, 0x00, 0x00, 0x00, 0x13, 0x04, 0x45, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x10, 0x00, 0x00, 0x00, 0xc4, 0x8c, 0x00, 0x10, 0x31, 0x03, 0x50, 0xb0,
  0x03, 0x45, 0x3b, 0x50, 0x0a, 0xe5, 0xff, 0xff, 0x57, 0x28, 0xe5, 0xff,
  0x50, 0x78, 0x65, 0x57, 0xb2, 0x03, 0xa5, 0x51, 0x10, 0x25, 0x09, 0x51,
  0x1c, 0x25, 0x41, 0x45, 0x09, 0x10, 0x53, 0x03, 0x34, 0xcc, 0x00, 0x10,
  0x36, 0x87, 0xf0, 0xa0, 0xc1, 0x1c, 0x42, 0x1a, 0x30, 0x73, 0x08, 0x66,
  0xd0, 0xd0, 0x36, 0x07, 0xc1, 0x30, 0x8c, 0x05, 0x23, 0x06, 0x08, 0x00,
  0x82, 0x60, 0xc0, 0xa9, 0x41, 0x13, 0x98, 0xc1, 0x35, 0x62, 0x70, 0x00,
  0x20, 0x08, 0x06, 0x19, 0x1b, 0x58, 0xc1, 0x30, 0x62, 0x90, 0x00, 0x20,
  0x08, 0x06, 0xc6, 0x1c, 0x90, 0x01, 0x19, 0xa0, 0xc1, 0x87, 0x8d, 0x18,
  0x24, 0x00, 0x08, 0x82, 0x81, 0x41, 0x07, 0x65, 0x50, 0x06, 0x69, 0xa0,
  0x64, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60, 0x60, 0xd4, 0x81, 0x19, 0x98,
  0x81, 0x1a, 0x80, 0x81, 0x36, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x86,
  0x1d, 0x9c, 0xc1, 0x19, 0xac, 0x01, 0x19, 0x6c, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x60, 0xdc, 0x01, 0x1a, 0xa8, 0x01, 0x1b, 0x8c, 0x01, 0x37,
  0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x06, 0x1e, 0xa4, 0xc1, 0x1a, 0xb4,
  0x81, 0xd3, 0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0x91, 0x07, 0x6a,
  0xb0, 0x06, 0x6e, 0x50, 0x06, 0xde, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18,
  0x18, 0x7a, 0xb0, 0x06, 0x6c, 0xf0, 0x06, 0xd0, 0x37, 0x62, 0x90, 0x00,
  0x20, 0x08, 0x06, 0xc6, 0x1e, 0xb0, 0xc1, 0x1c, 0xc0, 0xc1, 0x19, 0x80,
  0xc1, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x7c, 0xd0, 0x06, 0x74,
  0x10, 0x07, 0x52, 0x18, 0x8c, 0x18, 0x1c, 0x00, 0x08, 0x82, 0x81, 0x85,
  0x07, 0xda, 0x72, 0x8d, 0x26, 0x04, 0x41, 0x05, 0x60, 0xa0, 0x25, 0x80,
  0x01, 0x56, 0x00, 0x06, 0x3a, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x0d,
  0x28, 0x94, 0xc1, 0x80, 0x06, 0xd7, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18,
  0x64, 0x7d, 0x70, 0x06, 0x81, 0x35, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06,
  0x8d, 0x28, 0x9c, 0xc1, 0x90, 0x65, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60,
  0x90, 0xfd, 0x41, 0x1a, 0x04, 0xd7, 0x88, 0xc1, 0x03, 0x80, 0x20, 0x18,
  0x40, 0xa3, 0x40, 0x06, 0x43, 0xb0, 0x28, 0x9a, 0xb6, 0x07, 0x7b, 0xb0,
  0x06, 0xda, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20,
  0x8c, 0x26, 0x10, 0x83, 0x11, 0x98, 0x7c, 0x8c, 0xc0, 0xe4, 0x63, 0x04,
  0x26, 0x1f, 0x23, 0x30, 0xf9, 0x8c, 0x26, 0x48, 0xc2, 0x70, 0x43, 0x50,
  0x0a, 0x60, 0x30, 0xcb, 0x20, 0x04, 0x41, 0x09, 0x72, 0xa0, 0x35, 0xc8,
  0x01, 0x56, 0x20, 0x07, 0x3a, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x8d,
  0x2c, 0xdc, 0xc1, 0xa0, 0x07, 0x69, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08,
  0x06, 0xd9, 0x2b, 0xe4, 0x41, 0x80, 0x06, 0x23, 0x06, 0x08, 0x00, 0x82,
  0x60, 0xd0, 0xd0, 0x42, 0x1e, 0x0c, 0x6b, 0xb0, 0x06, 0x23, 0x06, 0x07,
  0x00, 0x82, 0x60, 0x90, 0xc5, 0xc2, 0x1e, 0x04, 0x69, 0x30, 0x62, 0xf0,
  0x00, 0x20, 0x08, 0x06, 0x50, 0x2d, 0xd8, 0xc1, 0x10, 0x7c, 0x1e, 0x1b,
  0xb0, 0x41, 0x2b, 0xb4, 0x42, 0x1f, 0xb0, 0xc1, 0x68, 0x42, 0x00, 0x58,
  0xc0, 0xc8, 0x67, 0x96, 0x40, 0x18, 0xa8, 0x18, 0x84, 0x40, 0x03, 0x46,
  0x13, 0xbe, 0x61, 0xb8, 0x21, 0x90, 0x05, 0x30, 0x98, 0x65, 0x20, 0x86,
  0xa0, 0x84, 0x3f, 0xd0, 0x1a, 0xfe, 0x00, 0x2b, 0xf8, 0x03, 0x1d, 0x31,
  0x40, 0x00, 0x10, 0x04, 0x83, 0xe6, 0x17, 0x48, 0x61, 0x38, 0x05, 0x3b,
  0x18, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0x8c, 0x17, 0x4c, 0x21, 0xa8,
  0x83, 0x11, 0x03, 0x04, 0x00, 0x41, 0x30, 0x68, 0xc2, 0xc1, 0x14, 0x06,
  0x3c, 0xc0, 0x83, 0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0xc8, 0x7c, 0x01,
  0x15, 0x02, 0x3b, 0x18, 0x31, 0x78, 0x00, 0x10, 0x04, 0x03, 0x48, 0x1c,
  0x46, 0x61, 0x08, 0xdc, 0xa0, 0x0d, 0xf2, 0x20, 0x0f, 0x74, 0x41, 0x17,
  0x54, 0x21, 0x0f, 0x46, 0x13, 0x02, 0x60, 0x34, 0x41, 0x08, 0x46, 0x13,
  0x06, 0x61, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xa6, 0x72, 0x30, 0x85,
  0x3b, 0x00, 0x85, 0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10, 0x82, 0xd1, 0x84,
  0x41, 0xb0, 0xe1, 0x90, 0x8f, 0x0d, 0x87, 0x7c, 0x6c, 0x38, 0xe4, 0x63,
  0x43, 0x19, 0xc0, 0xc7, 0x86, 0x32, 0x80, 0x8f, 0x0d, 0x65, 0x00, 0x9f,
  0x59, 0x02, 0x62, 0xa0, 0x62, 0x30, 0x06, 0x58, 0x10, 0x06, 0x2a, 0x06,
  0x63, 0x80, 0x05, 0x61, 0xa0, 0x62, 0x30, 0x06, 0x58, 0x10, 0x46, 0x0c,
  0x12, 0x00, 0x04, 0xc1, 0x00, 0xa9, 0x07, 0x5c, 0x58, 0x87, 0x75, 0x10,
  0x87, 0x61, 0xc4, 0x20, 0x01, 0x40, 0x10, 0x0c, 0x90, 0x7a, 0xc0, 0x85,
  0x75, 0x58, 0x07, 0x56, 0x10, 0x46, 0x0c, 0x12, 0x00, 0x04, 0xc1, 0x00,
  0xa9, 0x07, 0x5c, 0x58, 0x87, 0x75, 0x08, 0x87, 0x60, 0xc4, 0x20, 0x01,
  0x40, 0x10, 0x0c, 0x90, 0x7a, 0xc0, 0x85, 0x75, 0x58, 0x07, 0x72, 0xd8,
  0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
