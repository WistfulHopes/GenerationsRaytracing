#if 0
;
; Input signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; POSITION                 0   xyz         0     NONE   float   xyz 
; TEXCOORD                 0   xy          1     NONE   float   xy  
; TEXCOORD                 1   xy          2     NONE   float   xy  
; TEXCOORD                 2   xy          3     NONE   float   xy  
; TEXCOORD                 3   xy          4     NONE   float   xy  
; COLOR                    0   xyzw        5     NONE   float   xyzw
;
;
; Output signature:
;
; Name                 Index   Mask Register SysValue  Format   Used
; -------------------- ----- ------ -------- -------- ------- ------
; SV_Position              0   xyzw        0      POS   float   xyzw
; TEXCOORD                 0   xy          1     NONE   float   xy  
; TEXCOORD                 1     zw        1     NONE   float     zw
; TEXCOORD                 2   xy          2     NONE   float   xy  
; COLOR                    0   xyzw        3     NONE   float   xyzw
;
; shader hash: ba5f1177ca3cf8ce02d69a28feb6a274
;
; Pipeline Runtime Information: 
;
; Vertex Shader
; OutputPositionPresent=1
;
;
; Input signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; POSITION                 0                              
; TEXCOORD                 0                              
; TEXCOORD                 1                              
; TEXCOORD                 2                              
; TEXCOORD                 3                              
; COLOR                    0                              
;
; Output signature:
;
; Name                 Index             InterpMode DynIdx
; -------------------- ----- ---------------------- ------
; SV_Position              0          noperspective       
; TEXCOORD                 0                 linear       
; TEXCOORD                 1                 linear       
; TEXCOORD                 2                 linear       
; COLOR                    0                 linear       
;
; Buffer Definitions:
;
; cbuffer GlobalsSB
; {
;
;   struct hostlayout.GlobalsSB
;   {
;
;       row_major float4x4 g_MtxProjection;           ; Offset:    0
;       row_major float4x4 g_MtxView;                 ; Offset:   64
;       float g_BackGroundScale;                      ; Offset:  128
;       uint g_DiffuseTextureId;                      ; Offset:  132
;       uint g_AlphaTextureId;                        ; Offset:  136
;       uint g_EmissionTextureId;                     ; Offset:  140
;       float4 g_Ambient;                             ; Offset:  144
;       float4 g_TexCoordOffsets[2];                  ; Offset:  160
;   
;   } GlobalsSB;                                      ; Offset:    0 Size:   192
;
; }
;
;
; Resource Bindings:
;
; Name                                 Type  Format         Dim      ID      HLSL Bind  Count
; ------------------------------ ---------- ------- ----------- ------- -------------- ------
; GlobalsSB                         cbuffer      NA          NA     CB0            cb0     1
;
;
; ViewId state:
;
; Number of inputs: 24, outputs: 16
; Outputs dependent on ViewId: {  }
; Inputs contributing to computation of Outputs:
;   output 0 depends on inputs: { 0, 1, 2 }
;   output 1 depends on inputs: { 0, 1, 2 }
;   output 2 depends on inputs: { 0, 1, 2 }
;   output 3 depends on inputs: { 0, 1, 2 }
;   output 4 depends on inputs: { 4, 8, 12, 16 }
;   output 5 depends on inputs: { 5, 9, 13, 17 }
;   output 6 depends on inputs: { 4, 8, 12, 16 }
;   output 7 depends on inputs: { 5, 9, 13, 17 }
;   output 8 depends on inputs: { 4, 8, 12, 16 }
;   output 9 depends on inputs: { 5, 9, 13, 17 }
;   output 12 depends on inputs: { 20 }
;   output 13 depends on inputs: { 21 }
;   output 14 depends on inputs: { 22 }
;   output 15 depends on inputs: { 23 }
;
target datalayout = "e-m:e-p:32:32-i1:32-i8:32-i16:32-i32:32-i64:64-f16:32-f32:32-f64:64-n8:16:32:64"
target triple = "dxil-ms-dx"

%dx.types.Handle = type { i8* }
%dx.types.ResBind = type { i32, i32, i32, i8 }
%dx.types.ResourceProperties = type { i32, i32 }
%dx.types.CBufRet.f32 = type { float, float, float, float }
%dx.types.CBufRet.i32 = type { i32, i32, i32, i32 }
%hostlayout.GlobalsSB = type { [4 x <4 x float>], [4 x <4 x float>], float, i32, i32, i32, <4 x float>, [2 x <4 x float>] }

define void @main() {
  %1 = call %dx.types.Handle @dx.op.createHandleFromBinding(i32 217, %dx.types.ResBind { i32 0, i32 0, i32 0, i8 2 }, i32 0, i1 false)  ; CreateHandleFromBinding(bind,index,nonUniformIndex)
  %2 = call %dx.types.Handle @dx.op.annotateHandle(i32 216, %dx.types.Handle %1, %dx.types.ResourceProperties { i32 13, i32 192 })  ; AnnotateHandle(res,props)  resource: CBuffer
  %3 = call float @dx.op.loadInput.f32(i32 4, i32 5, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %4 = call float @dx.op.loadInput.f32(i32 4, i32 5, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %5 = call float @dx.op.loadInput.f32(i32 4, i32 5, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %6 = call float @dx.op.loadInput.f32(i32 4, i32 5, i32 0, i8 3, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %7 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %8 = call float @dx.op.loadInput.f32(i32 4, i32 4, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %9 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %10 = call float @dx.op.loadInput.f32(i32 4, i32 3, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %11 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %12 = call float @dx.op.loadInput.f32(i32 4, i32 2, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %13 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %14 = call float @dx.op.loadInput.f32(i32 4, i32 1, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %15 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 0, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %16 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 1, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %17 = call float @dx.op.loadInput.f32(i32 4, i32 0, i32 0, i8 2, i32 undef)  ; LoadInput(inputSigId,rowIndex,colIndex,gsVertexAxis)
  %18 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 0)  ; CBufferLoadLegacy(handle,regIndex)
  %19 = extractvalue %dx.types.CBufRet.f32 %18, 0
  %20 = extractvalue %dx.types.CBufRet.f32 %18, 1
  %21 = extractvalue %dx.types.CBufRet.f32 %18, 2
  %22 = extractvalue %dx.types.CBufRet.f32 %18, 3
  %23 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 1)  ; CBufferLoadLegacy(handle,regIndex)
  %24 = extractvalue %dx.types.CBufRet.f32 %23, 0
  %25 = extractvalue %dx.types.CBufRet.f32 %23, 1
  %26 = extractvalue %dx.types.CBufRet.f32 %23, 2
  %27 = extractvalue %dx.types.CBufRet.f32 %23, 3
  %28 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 2)  ; CBufferLoadLegacy(handle,regIndex)
  %29 = extractvalue %dx.types.CBufRet.f32 %28, 0
  %30 = extractvalue %dx.types.CBufRet.f32 %28, 1
  %31 = extractvalue %dx.types.CBufRet.f32 %28, 2
  %32 = extractvalue %dx.types.CBufRet.f32 %28, 3
  %33 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 3)  ; CBufferLoadLegacy(handle,regIndex)
  %34 = extractvalue %dx.types.CBufRet.f32 %33, 0
  %35 = extractvalue %dx.types.CBufRet.f32 %33, 1
  %36 = extractvalue %dx.types.CBufRet.f32 %33, 2
  %37 = extractvalue %dx.types.CBufRet.f32 %33, 3
  %38 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 4)  ; CBufferLoadLegacy(handle,regIndex)
  %39 = extractvalue %dx.types.CBufRet.f32 %38, 0
  %40 = extractvalue %dx.types.CBufRet.f32 %38, 1
  %41 = extractvalue %dx.types.CBufRet.f32 %38, 2
  %42 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 5)  ; CBufferLoadLegacy(handle,regIndex)
  %43 = extractvalue %dx.types.CBufRet.f32 %42, 0
  %44 = extractvalue %dx.types.CBufRet.f32 %42, 1
  %45 = extractvalue %dx.types.CBufRet.f32 %42, 2
  %46 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 6)  ; CBufferLoadLegacy(handle,regIndex)
  %47 = extractvalue %dx.types.CBufRet.f32 %46, 0
  %48 = extractvalue %dx.types.CBufRet.f32 %46, 1
  %49 = extractvalue %dx.types.CBufRet.f32 %46, 2
  %50 = fmul fast float %39, %15
  %51 = call float @dx.op.tertiary.f32(i32 46, float %16, float %43, float %50)  ; FMad(a,b,c)
  %52 = call float @dx.op.tertiary.f32(i32 46, float %17, float %47, float %51)  ; FMad(a,b,c)
  %53 = fmul fast float %40, %15
  %54 = call float @dx.op.tertiary.f32(i32 46, float %16, float %44, float %53)  ; FMad(a,b,c)
  %55 = call float @dx.op.tertiary.f32(i32 46, float %17, float %48, float %54)  ; FMad(a,b,c)
  %56 = fmul fast float %41, %15
  %57 = call float @dx.op.tertiary.f32(i32 46, float %16, float %45, float %56)  ; FMad(a,b,c)
  %58 = call float @dx.op.tertiary.f32(i32 46, float %17, float %49, float %57)  ; FMad(a,b,c)
  %59 = fmul fast float %52, %19
  %60 = call float @dx.op.tertiary.f32(i32 46, float %55, float %24, float %59)  ; FMad(a,b,c)
  %61 = call float @dx.op.tertiary.f32(i32 46, float %58, float %29, float %60)  ; FMad(a,b,c)
  %62 = fadd fast float %61, %34
  %63 = fmul fast float %52, %20
  %64 = call float @dx.op.tertiary.f32(i32 46, float %55, float %25, float %63)  ; FMad(a,b,c)
  %65 = call float @dx.op.tertiary.f32(i32 46, float %58, float %30, float %64)  ; FMad(a,b,c)
  %66 = fadd fast float %65, %35
  %67 = fmul fast float %52, %21
  %68 = call float @dx.op.tertiary.f32(i32 46, float %55, float %26, float %67)  ; FMad(a,b,c)
  %69 = call float @dx.op.tertiary.f32(i32 46, float %58, float %31, float %68)  ; FMad(a,b,c)
  %70 = fadd fast float %69, %36
  %71 = fmul fast float %52, %22
  %72 = call float @dx.op.tertiary.f32(i32 46, float %55, float %27, float %71)  ; FMad(a,b,c)
  %73 = call float @dx.op.tertiary.f32(i32 46, float %58, float %32, float %72)  ; FMad(a,b,c)
  %74 = fadd fast float %73, %37
  %75 = call %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32 59, %dx.types.Handle %2, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %76 = extractvalue %dx.types.CBufRet.i32 %75, 1
  %77 = lshr i32 %76, 30
  switch i32 %77, label %78 [
    i32 3, label %96
    i32 1, label %84
    i32 2, label %90
  ]

; <label>:78                                      ; preds = %0
  %79 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %80 = extractvalue %dx.types.CBufRet.f32 %79, 0
  %81 = extractvalue %dx.types.CBufRet.f32 %79, 1
  %82 = fadd fast float %80, %13
  %83 = fadd fast float %81, %14
  br label %102

; <label>:84                                      ; preds = %0
  %85 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %86 = extractvalue %dx.types.CBufRet.f32 %85, 2
  %87 = extractvalue %dx.types.CBufRet.f32 %85, 3
  %88 = fadd fast float %86, %11
  %89 = fadd fast float %87, %12
  br label %102

; <label>:90                                      ; preds = %0
  %91 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 11)  ; CBufferLoadLegacy(handle,regIndex)
  %92 = extractvalue %dx.types.CBufRet.f32 %91, 0
  %93 = extractvalue %dx.types.CBufRet.f32 %91, 1
  %94 = fadd fast float %92, %9
  %95 = fadd fast float %93, %10
  br label %102

; <label>:96                                      ; preds = %0
  %97 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 11)  ; CBufferLoadLegacy(handle,regIndex)
  %98 = extractvalue %dx.types.CBufRet.f32 %97, 2
  %99 = extractvalue %dx.types.CBufRet.f32 %97, 3
  %100 = fadd fast float %98, %7
  %101 = fadd fast float %99, %8
  br label %102

; <label>:102                                     ; preds = %96, %90, %84, %78
  %103 = phi float [ %82, %78 ], [ %94, %90 ], [ %88, %84 ], [ %100, %96 ]
  %104 = phi float [ %83, %78 ], [ %95, %90 ], [ %89, %84 ], [ %101, %96 ]
  %105 = extractvalue %dx.types.CBufRet.i32 %75, 2
  %106 = lshr i32 %105, 30
  switch i32 %106, label %107 [
    i32 3, label %125
    i32 1, label %113
    i32 2, label %119
  ]

; <label>:107                                     ; preds = %102
  %108 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %109 = extractvalue %dx.types.CBufRet.f32 %108, 0
  %110 = extractvalue %dx.types.CBufRet.f32 %108, 1
  %111 = fadd fast float %109, %13
  %112 = fadd fast float %110, %14
  br label %131

; <label>:113                                     ; preds = %102
  %114 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %115 = extractvalue %dx.types.CBufRet.f32 %114, 2
  %116 = extractvalue %dx.types.CBufRet.f32 %114, 3
  %117 = fadd fast float %115, %11
  %118 = fadd fast float %116, %12
  br label %131

; <label>:119                                     ; preds = %102
  %120 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 11)  ; CBufferLoadLegacy(handle,regIndex)
  %121 = extractvalue %dx.types.CBufRet.f32 %120, 0
  %122 = extractvalue %dx.types.CBufRet.f32 %120, 1
  %123 = fadd fast float %121, %9
  %124 = fadd fast float %122, %10
  br label %131

; <label>:125                                     ; preds = %102
  %126 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 11)  ; CBufferLoadLegacy(handle,regIndex)
  %127 = extractvalue %dx.types.CBufRet.f32 %126, 2
  %128 = extractvalue %dx.types.CBufRet.f32 %126, 3
  %129 = fadd fast float %127, %7
  %130 = fadd fast float %128, %8
  br label %131

; <label>:131                                     ; preds = %125, %119, %113, %107
  %132 = phi float [ %111, %107 ], [ %123, %119 ], [ %117, %113 ], [ %129, %125 ]
  %133 = phi float [ %112, %107 ], [ %124, %119 ], [ %118, %113 ], [ %130, %125 ]
  %134 = extractvalue %dx.types.CBufRet.i32 %75, 3
  %135 = lshr i32 %134, 30
  switch i32 %135, label %136 [
    i32 3, label %154
    i32 1, label %142
    i32 2, label %148
  ]

; <label>:136                                     ; preds = %131
  %137 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %138 = extractvalue %dx.types.CBufRet.f32 %137, 0
  %139 = extractvalue %dx.types.CBufRet.f32 %137, 1
  %140 = fadd fast float %138, %13
  %141 = fadd fast float %139, %14
  br label %160

; <label>:142                                     ; preds = %131
  %143 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 10)  ; CBufferLoadLegacy(handle,regIndex)
  %144 = extractvalue %dx.types.CBufRet.f32 %143, 2
  %145 = extractvalue %dx.types.CBufRet.f32 %143, 3
  %146 = fadd fast float %144, %11
  %147 = fadd fast float %145, %12
  br label %160

; <label>:148                                     ; preds = %131
  %149 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 11)  ; CBufferLoadLegacy(handle,regIndex)
  %150 = extractvalue %dx.types.CBufRet.f32 %149, 0
  %151 = extractvalue %dx.types.CBufRet.f32 %149, 1
  %152 = fadd fast float %150, %9
  %153 = fadd fast float %151, %10
  br label %160

; <label>:154                                     ; preds = %131
  %155 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 11)  ; CBufferLoadLegacy(handle,regIndex)
  %156 = extractvalue %dx.types.CBufRet.f32 %155, 2
  %157 = extractvalue %dx.types.CBufRet.f32 %155, 3
  %158 = fadd fast float %156, %7
  %159 = fadd fast float %157, %8
  br label %160

; <label>:160                                     ; preds = %154, %148, %142, %136
  %161 = phi float [ %140, %136 ], [ %152, %148 ], [ %146, %142 ], [ %158, %154 ]
  %162 = phi float [ %141, %136 ], [ %153, %148 ], [ %147, %142 ], [ %159, %154 ]
  %163 = call %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32 59, %dx.types.Handle %2, i32 8)  ; CBufferLoadLegacy(handle,regIndex)
  %164 = extractvalue %dx.types.CBufRet.f32 %163, 0
  %165 = fmul fast float %164, %3
  %166 = fmul fast float %164, %4
  %167 = fmul fast float %164, %5
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 0, float %62)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 1, float %66)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 2, float %70)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 0, i32 0, i8 3, float %74)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 0, float %103)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 1, i32 0, i8 1, float %104)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 0, float %132)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 2, i32 0, i8 1, float %133)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 0, float %161)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 3, i32 0, i8 1, float %162)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 0, float %165)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 1, float %166)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 2, float %167)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  call void @dx.op.storeOutput.f32(i32 5, i32 4, i32 0, i8 3, float %6)  ; StoreOutput(outputSigId,rowIndex,colIndex,value)
  ret void
}

; Function Attrs: nounwind readnone
declare float @dx.op.loadInput.f32(i32, i32, i32, i8, i32) #0

; Function Attrs: nounwind
declare void @dx.op.storeOutput.f32(i32, i32, i32, i8, float) #1

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.f32 @dx.op.cbufferLoadLegacy.f32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readonly
declare %dx.types.CBufRet.i32 @dx.op.cbufferLoadLegacy.i32(i32, %dx.types.Handle, i32) #2

; Function Attrs: nounwind readnone
declare float @dx.op.tertiary.f32(i32, float, float, float) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.annotateHandle(i32, %dx.types.Handle, %dx.types.ResourceProperties) #0

; Function Attrs: nounwind readnone
declare %dx.types.Handle @dx.op.createHandleFromBinding(i32, %dx.types.ResBind, i32, i1) #0

attributes #0 = { nounwind readnone }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!llvm.ident = !{!0}
!dx.version = !{!1}
!dx.valver = !{!2}
!dx.shaderModel = !{!3}
!dx.resources = !{!4}
!dx.viewIdState = !{!7}
!dx.entryPoints = !{!8}

!0 = !{!"dxcoob 1.7.2308.7 (69e54e290)"}
!1 = !{i32 1, i32 6}
!2 = !{i32 1, i32 7}
!3 = !{!"vs", i32 6, i32 6}
!4 = !{null, null, !5, null}
!5 = !{!6}
!6 = !{i32 0, %hostlayout.GlobalsSB* undef, !"", i32 0, i32 0, i32 1, i32 192, null}
!7 = !{[26 x i32] [i32 24, i32 16, i32 15, i32 15, i32 15, i32 0, i32 336, i32 672, i32 0, i32 0, i32 336, i32 672, i32 0, i32 0, i32 336, i32 672, i32 0, i32 0, i32 336, i32 672, i32 0, i32 0, i32 4096, i32 8192, i32 16384, i32 32768]}
!8 = !{void ()* @main, !"main", !9, !4, null}
!9 = !{!10, !24, null}
!10 = !{!11, !14, !16, !18, !20, !22}
!11 = !{i32 0, !"POSITION", i8 9, i8 0, !12, i8 0, i32 1, i8 3, i32 0, i8 0, !13}
!12 = !{i32 0}
!13 = !{i32 3, i32 7}
!14 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !12, i8 0, i32 1, i8 2, i32 1, i8 0, !15}
!15 = !{i32 3, i32 3}
!16 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !17, i8 0, i32 1, i8 2, i32 2, i8 0, !15}
!17 = !{i32 1}
!18 = !{i32 3, !"TEXCOORD", i8 9, i8 0, !19, i8 0, i32 1, i8 2, i32 3, i8 0, !15}
!19 = !{i32 2}
!20 = !{i32 4, !"TEXCOORD", i8 9, i8 0, !21, i8 0, i32 1, i8 2, i32 4, i8 0, !15}
!21 = !{i32 3}
!22 = !{i32 5, !"COLOR", i8 9, i8 0, !12, i8 0, i32 1, i8 4, i32 5, i8 0, !23}
!23 = !{i32 3, i32 15}
!24 = !{!25, !26, !27, !28, !29}
!25 = !{i32 0, !"SV_Position", i8 9, i8 3, !12, i8 4, i32 1, i8 4, i32 0, i8 0, !23}
!26 = !{i32 1, !"TEXCOORD", i8 9, i8 0, !12, i8 2, i32 1, i8 2, i32 1, i8 0, !15}
!27 = !{i32 2, !"TEXCOORD", i8 9, i8 0, !17, i8 2, i32 1, i8 2, i32 1, i8 2, !15}
!28 = !{i32 3, !"TEXCOORD", i8 9, i8 0, !19, i8 2, i32 1, i8 2, i32 2, i8 0, !15}
!29 = !{i32 4, !"COLOR", i8 9, i8 0, !12, i8 2, i32 1, i8 4, i32 3, i8 0, !23}

#endif

const unsigned char SkyVertexShader[] = {
  0x44, 0x58, 0x42, 0x43, 0xb3, 0xa6, 0x07, 0x51, 0x7f, 0xc4, 0xe8, 0x3a,
  0x71, 0x4e, 0x70, 0x17, 0x78, 0x79, 0x03, 0x8d, 0x01, 0x00, 0x00, 0x00,
  0x04, 0x19, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00,
  0x4c, 0x00, 0x00, 0x00, 0x34, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
  0xe0, 0x03, 0x00, 0x00, 0x78, 0x0c, 0x00, 0x00, 0x94, 0x0c, 0x00, 0x00,
  0x53, 0x46, 0x49, 0x30, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x49, 0x53, 0x47, 0x31, 0xe0, 0x00, 0x00, 0x00,
  0x06, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd1, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xd1, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xd1, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd1, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xda, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
  0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x4f, 0x53, 0x49,
  0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52,
  0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x4f, 0x53, 0x47, 0x31,
  0xc4, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xb4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x0c, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x03, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xbd, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x53, 0x56, 0x5f, 0x50, 0x6f, 0x73, 0x69, 0x74,
  0x69, 0x6f, 0x6e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44,
  0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x00, 0x50, 0x53, 0x56, 0x30,
  0xd8, 0x01, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00,
  0x06, 0x05, 0x00, 0x06, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x00, 0x50, 0x4f, 0x53,
  0x49, 0x54, 0x49, 0x4f, 0x4e, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f,
  0x52, 0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00,
  0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x45, 0x58,
  0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00,
  0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x45, 0x58,
  0x43, 0x4f, 0x4f, 0x52, 0x44, 0x00, 0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f,
  0x52, 0x44, 0x00, 0x43, 0x4f, 0x4c, 0x4f, 0x52, 0x00, 0x00, 0x00, 0x00,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
  0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x43, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x42, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x02, 0x42, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x1c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x03, 0x42, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x01, 0x04, 0x42, 0x00, 0x03, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x01, 0x05, 0x44, 0x00, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x44, 0x03,
  0x03, 0x04, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x01, 0x42, 0x00, 0x03, 0x02, 0x00, 0x00, 0x3d, 0x00, 0x00, 0x00,
  0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x62, 0x00, 0x03, 0x02, 0x00, 0x00,
  0x46, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x02, 0x42, 0x00,
  0x03, 0x02, 0x00, 0x00, 0x4f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x01, 0x03, 0x44, 0x00, 0x03, 0x02, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00,
  0x0f, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x50, 0x01, 0x00, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x50, 0x01, 0x00, 0x00, 0xa0, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x01, 0x00, 0x00,
  0xa0, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x50, 0x01, 0x00, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00,
  0x00, 0x40, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x53, 0x54, 0x41, 0x54,
  0x90, 0x08, 0x00, 0x00, 0x66, 0x00, 0x01, 0x00, 0x24, 0x02, 0x00, 0x00,
  0x44, 0x58, 0x49, 0x4c, 0x06, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
  0x78, 0x08, 0x00, 0x00, 0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00,
  0x1b, 0x02, 0x00, 0x00, 0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00,
  0x13, 0x00, 0x00, 0x00, 0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49,
  0x06, 0x10, 0x32, 0x39, 0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19,
  0x1e, 0x04, 0x8b, 0x62, 0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42,
  0xc4, 0x10, 0x32, 0x14, 0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88,
  0x48, 0x90, 0x14, 0x20, 0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42,
  0xe4, 0x48, 0x0e, 0x90, 0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c,
  0xe1, 0x83, 0xe5, 0x8a, 0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00,
  0x08, 0x00, 0x00, 0x00, 0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07,
  0x40, 0x02, 0xa8, 0x0d, 0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20,
  0x6d, 0x30, 0x86, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00,
  0x49, 0x18, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42,
  0x20, 0x4c, 0x08, 0x06, 0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00,
  0x39, 0x00, 0x00, 0x00, 0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04,
  0x13, 0x23, 0xa4, 0x84, 0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14,
  0x12, 0x4c, 0x8c, 0x8c, 0x0b, 0x84, 0xc4, 0x4c, 0x10, 0x88, 0xc1, 0x08,
  0x40, 0x09, 0x00, 0x0a, 0x66, 0x00, 0xe6, 0x08, 0xc0, 0x60, 0x8e, 0x00,
  0x29, 0xc6, 0x40, 0x10, 0x44, 0x41, 0x90, 0x51, 0x0c, 0x80, 0x20, 0x88,
  0x62, 0x20, 0xe4, 0xa8, 0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24, 0x9f, 0xdb,
  0xa8, 0x62, 0x25, 0x26, 0xbf, 0xb8, 0x6d, 0x44, 0x0c, 0xc3, 0x30, 0x50,
  0x71, 0xcf, 0x70, 0xf9, 0x13, 0xf6, 0x10, 0x92, 0x1f, 0x02, 0xcd, 0xb0,
  0x10, 0x28, 0x58, 0x0a, 0xa1, 0x10, 0x0c, 0x41, 0xcd, 0x51, 0xc3, 0xe5,
  0x4f, 0xd8, 0x43, 0x48, 0x3e, 0xb7, 0x51, 0xc5, 0x4a, 0x4c, 0x3e, 0x72,
  0xdb, 0x88, 0x20, 0x08, 0x82, 0x28, 0xc4, 0x43, 0x30, 0x04, 0x41, 0xa5,
  0x18, 0x88, 0x61, 0x18, 0x48, 0xba, 0x6d, 0xb8, 0xfc, 0x09, 0x7b, 0x08,
  0xc9, 0x5f, 0x09, 0xc9, 0xa1, 0x22, 0x81, 0x48, 0x23, 0xe7, 0x21, 0xa2,
  0x09, 0x21, 0x24, 0x24, 0x10, 0x44, 0x21, 0x18, 0x82, 0xa1, 0xa8, 0x3a,
  0x68, 0xb8, 0xfc, 0x09, 0x7b, 0x08, 0xc9, 0x5f, 0x09, 0x69, 0x43, 0x9a,
  0x01, 0x11, 0x04, 0x41, 0x14, 0x73, 0x04, 0x41, 0x29, 0x18, 0xe2, 0x22,
  0x30, 0xca, 0x06, 0x02, 0x86, 0x11, 0x88, 0x21, 0x09, 0xb8, 0x14, 0xe0,
  0x8e, 0x3a, 0x1c, 0x69, 0x5a, 0x00, 0xcc, 0xa1, 0x26, 0x1f, 0x5c, 0x9c,
  0x00, 0x58, 0x24, 0x76, 0x43, 0x48, 0xd7, 0x0d, 0x04, 0x41, 0x70, 0x1e,
  0x7d, 0xa9, 0x41, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50,
  0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90,
  0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0,
  0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x43, 0x9e,
  0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86,
  0x3c, 0x06, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0c, 0x79, 0x10, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x18, 0xf2, 0x34, 0x40, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x30, 0xe4, 0x81, 0x80, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x60, 0xc8, 0x23, 0x01, 0x01, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0xa7, 0x02, 0x02, 0x20, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x4f, 0x06, 0x04, 0x40, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x59, 0x20, 0x00, 0x00, 0x00,
  0x1c, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x18, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22, 0x4a, 0xa0, 0x18, 0x46,
  0x00, 0x0a, 0x70, 0xa0, 0x08, 0x0a, 0xa1, 0x0c, 0xca, 0xa1, 0x24, 0x0a,
  0x30, 0xa0, 0x00, 0x05, 0x0a, 0x51, 0xa0, 0x14, 0x0a, 0x52, 0xa0, 0x30,
  0x05, 0x0a, 0x54, 0xa0, 0x80, 0x05, 0xca, 0xa3, 0x98, 0x8a, 0x5d, 0xa0,
  0x38, 0xa8, 0x28, 0x89, 0x11, 0x80, 0x32, 0x28, 0x82, 0x42, 0x20, 0xac,
  0x06, 0xe8, 0x9b, 0x01, 0x20, 0x70, 0x06, 0x80, 0xc2, 0xb1, 0x34, 0x0c,
  0x7a, 0x9e, 0x07, 0x80, 0x15, 0xb0, 0x02, 0x00, 0x58, 0x01, 0x2b, 0x00,
  0x80, 0x15, 0xb0, 0x02, 0x00, 0x58, 0x01, 0x2b, 0x00, 0x00, 0x41, 0x02,
  0x04, 0x11, 0x10, 0x84, 0x40, 0x10, 0x0c, 0x00, 0x79, 0x18, 0x00, 0x00,
  0xe4, 0x00, 0x00, 0x00, 0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4,
  0x8e, 0x0c, 0x6f, 0xec, 0xed, 0x4d, 0x0c, 0x24, 0xc6, 0xe5, 0xc6, 0x45,
  0x66, 0x06, 0x06, 0xc7, 0xe5, 0x06, 0x04, 0xc5, 0x26, 0xa7, 0xac, 0x86,
  0xa6, 0x4c, 0x26, 0x07, 0x26, 0x65, 0x43, 0x10, 0x4c, 0x10, 0x08, 0x64,
  0x82, 0x40, 0x24, 0x1b, 0x84, 0x81, 0x98, 0x20, 0x10, 0xca, 0x06, 0xc1,
  0x30, 0x28, 0xd8, 0xcd, 0x6d, 0x18, 0x10, 0x82, 0x98, 0x20, 0x80, 0x01,
  0x19, 0x30, 0x39, 0x62, 0x7b, 0x13, 0x0b, 0x63, 0x9b, 0x9b, 0x12, 0x9a,
  0x20, 0x10, 0xcb, 0x06, 0xc4, 0x50, 0x16, 0xc3, 0x18, 0x18, 0x60, 0x43,
  0xd0, 0x6c, 0x20, 0x00, 0xc0, 0x01, 0x26, 0x08, 0xdf, 0x18, 0xf0, 0x39,
  0xfb, 0x6a, 0xa2, 0xc3, 0x83, 0x92, 0x7b, 0x53, 0x2b, 0x1b, 0xa3, 0x4b,
  0x7b, 0x73, 0x9b, 0x20, 0x10, 0xcc, 0x04, 0x81, 0x68, 0x36, 0x0c, 0xd3,
  0x34, 0x4c, 0x10, 0x08, 0x67, 0x82, 0x40, 0x3c, 0x13, 0x04, 0x02, 0x9a,
  0x20, 0x60, 0x62, 0xb0, 0x41, 0x21, 0x22, 0x89, 0xaa, 0x0c, 0xeb, 0xba,
  0x30, 0x26, 0x67, 0x5f, 0x4d, 0x74, 0x78, 0x56, 0x69, 0x65, 0x77, 0x13,
  0x04, 0x22, 0xda, 0xa0, 0x10, 0x9a, 0x44, 0x55, 0x9b, 0x75, 0x5d, 0x18,
  0xa3, 0xb3, 0x2f, 0xa1, 0xb0, 0xb1, 0xb5, 0x23, 0xb9, 0xb7, 0x3a, 0x37,
  0xb2, 0xa9, 0xb1, 0x30, 0xb6, 0xb2, 0x09, 0x02, 0x21, 0x6d, 0x40, 0x88,
  0xae, 0xf2, 0xac, 0xeb, 0xc2, 0x28, 0x9d, 0x7d, 0x11, 0xa5, 0x99, 0x99,
  0xd5, 0xcd, 0x95, 0x51, 0x95, 0xe1, 0xd1, 0xd5, 0xc9, 0x95, 0x25, 0x91,
  0x4d, 0x10, 0x88, 0x69, 0x82, 0x40, 0x50, 0x1b, 0x10, 0x02, 0x0c, 0xaa,
  0x30, 0xb0, 0xc4, 0xe0, 0xc2, 0x08, 0x9d, 0x7d, 0x05, 0xb1, 0xc1, 0xa1,
  0x85, 0x51, 0x95, 0xe1, 0xd1, 0xd5, 0xc9, 0x95, 0x25, 0x91, 0x4d, 0x10,
  0x88, 0x6a, 0x03, 0x42, 0x90, 0x41, 0x55, 0x06, 0x96, 0x18, 0x5c, 0x18,
  0xa7, 0xb3, 0xaf, 0xa2, 0xb6, 0xb4, 0xb9, 0xb9, 0xb4, 0x37, 0x37, 0xaa,
  0x32, 0x3c, 0xba, 0x3a, 0xb9, 0xb2, 0x24, 0xb2, 0x09, 0x02, 0x61, 0x6d,
  0x40, 0x88, 0x33, 0xa8, 0xd0, 0xc0, 0x12, 0x83, 0x0b, 0x63, 0x72, 0xf6,
  0x15, 0xd4, 0x26, 0x96, 0x56, 0xe6, 0x46, 0x37, 0x41, 0x20, 0xae, 0x0d,
  0x06, 0xa1, 0x06, 0xd5, 0x1a, 0x58, 0x17, 0xa3, 0xb3, 0x2f, 0xaa, 0x32,
  0xbc, 0xa1, 0xb7, 0x37, 0x39, 0xb2, 0x27, 0x33, 0xb3, 0xb9, 0x32, 0xba,
  0xb9, 0x09, 0x02, 0x81, 0x6d, 0x40, 0x88, 0x36, 0xa8, 0xdc, 0xc0, 0xba,
  0x2e, 0x6c, 0x43, 0xc2, 0x64, 0xdc, 0x37, 0x06, 0x66, 0x90, 0x06, 0x6c,
  0xf0, 0x06, 0x1b, 0x06, 0x03, 0x82, 0x83, 0x09, 0x82, 0x00, 0x6c, 0x00,
  0x36, 0x0c, 0xc6, 0x1c, 0xcc, 0xc1, 0x86, 0x80, 0x0e, 0x36, 0x0c, 0x83,
  0x1c, 0xd4, 0xc1, 0x04, 0x21, 0x0c, 0xca, 0x60, 0x43, 0x70, 0x07, 0x24,
  0xda, 0xc2, 0xd2, 0xdc, 0x88, 0x40, 0x3d, 0x4d, 0x25, 0x51, 0x25, 0x3d,
  0x39, 0x4d, 0x10, 0x8a, 0x6e, 0x82, 0x50, 0x78, 0x1b, 0x02, 0x63, 0x82,
  0x50, 0x7c, 0x1b, 0x84, 0xca, 0xda, 0xb0, 0x18, 0x7a, 0xb0, 0x07, 0x7c,
  0xd0, 0x07, 0x7c, 0x30, 0xf8, 0x81, 0xc1, 0x07, 0x7f, 0x40, 0x84, 0xaa,
  0x08, 0x6b, 0xe8, 0xe9, 0x49, 0x8a, 0x68, 0x82, 0x50, 0x80, 0xc1, 0x06,
  0xa1, 0xaa, 0x36, 0x2c, 0x43, 0x28, 0xec, 0x01, 0x1f, 0xf4, 0x01, 0x1f,
  0x0c, 0xa2, 0x30, 0xf0, 0xc1, 0x28, 0x6c, 0x08, 0x86, 0x0d, 0x8b, 0x14,
  0x0a, 0x7b, 0xc0, 0x07, 0xa5, 0xc0, 0x07, 0x83, 0x28, 0x48, 0x7c, 0x30,
  0x0a, 0x1b, 0x02, 0x69, 0xc3, 0x52, 0x85, 0xc2, 0x1e, 0xf0, 0xc1, 0x29,
  0xf0, 0xc1, 0x20, 0x0a, 0x15, 0x1f, 0x8c, 0xc2, 0x86, 0xa0, 0xda, 0xb0,
  0x4c, 0xa1, 0xb0, 0x07, 0x7c, 0x90, 0x0a, 0x7c, 0x30, 0x88, 0xc2, 0xc4,
  0x07, 0xa3, 0xc0, 0x62, 0xe8, 0x89, 0xe9, 0x49, 0x6a, 0x82, 0x50, 0x84,
  0xc1, 0x04, 0x81, 0xc8, 0x36, 0x08, 0x55, 0x2b, 0x6c, 0x58, 0xc4, 0x60,
  0x15, 0xf6, 0x80, 0x0f, 0xfa, 0x80, 0x0f, 0x06, 0x56, 0x10, 0x03, 0x3e,
  0x70, 0x85, 0x0d, 0x06, 0x28, 0x90, 0x82, 0x29, 0xa0, 0x82, 0x2a, 0xbc,
  0x02, 0x97, 0x29, 0xab, 0x2f, 0xa8, 0xb7, 0xb9, 0x34, 0xba, 0xb4, 0x37,
  0xb7, 0x0d, 0x8b, 0x11, 0x0b, 0x7b, 0xe0, 0x07, 0x7d, 0xc0, 0x0a, 0x03,
  0x2b, 0x18, 0x7c, 0xe0, 0x0a, 0x1b, 0x96, 0x21, 0x14, 0xf6, 0x80, 0x0f,
  0xfa, 0x40, 0x14, 0x06, 0x51, 0x18, 0xf8, 0x60, 0x14, 0x36, 0x2c, 0x52,
  0x28, 0xec, 0x01, 0x1f, 0x94, 0x82, 0x28, 0x0c, 0xa2, 0x30, 0x88, 0xc2,
  0x28, 0x6c, 0x58, 0xaa, 0x50, 0xd8, 0x03, 0x3e, 0x38, 0x05, 0x51, 0x18,
  0x44, 0x41, 0xe2, 0x83, 0x51, 0xd8, 0xb0, 0x4c, 0xab, 0xb0, 0x07, 0x7c,
  0xd0, 0x07, 0xa2, 0x30, 0xb0, 0x42, 0xc5, 0x07, 0xae, 0xb0, 0xa1, 0x90,
  0x85, 0x59, 0xa0, 0x85, 0x5a, 0xb0, 0x85, 0x0d, 0x03, 0x2c, 0xdc, 0x02,
  0xb0, 0xa1, 0x90, 0x83, 0x3c, 0xc0, 0x85, 0x07, 0xa0, 0x61, 0xc6, 0xf6,
  0x16, 0x46, 0x37, 0x37, 0x41, 0x20, 0x34, 0x16, 0x69, 0x6e, 0x73, 0x74,
  0x73, 0x13, 0x04, 0x62, 0xa3, 0x31, 0x97, 0x76, 0xf6, 0xc5, 0x46, 0x46,
  0x63, 0x2e, 0xed, 0xec, 0x6b, 0x8e, 0x6e, 0x82, 0x40, 0x70, 0x2c, 0xea,
  0xd2, 0xdc, 0xe8, 0xe6, 0x36, 0x28, 0xba, 0xb0, 0x0b, 0xbc, 0xd0, 0x0b,
  0xbe, 0xd0, 0x0a, 0xbf, 0x00, 0x0e, 0xe1, 0x50, 0x55, 0x61, 0x63, 0xb3,
  0x6b, 0x73, 0x49, 0x23, 0x2b, 0x73, 0xa3, 0x9b, 0x12, 0x04, 0x55, 0xc8,
  0xf0, 0x5c, 0xec, 0xca, 0xe4, 0xe6, 0xd2, 0xde, 0xdc, 0xa6, 0x04, 0x44,
  0x13, 0x32, 0x3c, 0x17, 0xbb, 0x30, 0x36, 0xbb, 0x32, 0xb9, 0x29, 0x81,
  0x51, 0x87, 0x0c, 0xcf, 0x65, 0x0e, 0x2d, 0x8c, 0xac, 0x4c, 0xae, 0xe9,
  0x8d, 0xac, 0x8c, 0x6d, 0x4a, 0x80, 0x94, 0x21, 0xc3, 0x73, 0x91, 0x2b,
  0x9b, 0x7b, 0xab, 0x93, 0x1b, 0x2b, 0x9b, 0x9b, 0x12, 0x38, 0x95, 0xc8,
  0xf0, 0x5c, 0xe8, 0xf2, 0xe0, 0xca, 0x82, 0xdc, 0xdc, 0xde, 0xe8, 0xc2,
  0xe8, 0xd2, 0xde, 0xdc, 0xe6, 0xa6, 0x08, 0x70, 0x50, 0x07, 0x75, 0xc8,
  0xf0, 0x5c, 0xec, 0xd2, 0xca, 0xee, 0x92, 0xc8, 0xa6, 0xe8, 0xc2, 0xe8,
  0xca, 0xa6, 0x04, 0x77, 0x50, 0x87, 0x0c, 0xcf, 0xa5, 0xcc, 0x8d, 0x4e,
  0x2e, 0x0f, 0xea, 0x2d, 0xcd, 0x8d, 0x6e, 0x6e, 0x4a, 0x80, 0x0b, 0x5d,
  0xc8, 0xf0, 0x5c, 0xc6, 0xde, 0xea, 0xdc, 0xe8, 0xca, 0xe4, 0xe6, 0xa6,
  0x04, 0xe1, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00,
  0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88,
  0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73,
  0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e,
  0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30,
  0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8,
  0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b,
  0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76,
  0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e,
  0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e,
  0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61,
  0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4,
  0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76,
  0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37,
  0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76,
  0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71,
  0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e,
  0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1,
  0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61,
  0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90,
  0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8,
  0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc,
  0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4,
  0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19,
  0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06,
  0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f,
  0xf4, 0x30, 0x83, 0x81, 0xc8, 0x01, 0x1f, 0xdc, 0x40, 0x1c, 0xe4, 0xa1,
  0x1c, 0xc2, 0x61, 0x1d, 0xdc, 0x40, 0x1c, 0xe4, 0x01, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x66, 0x40, 0x0d, 0x97,
  0xef, 0x3c, 0x3e, 0xd0, 0x34, 0xce, 0x04, 0x4c, 0x44, 0x08, 0x34, 0xc3,
  0x42, 0xd8, 0xc0, 0x36, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x40, 0x15, 0x05,
  0x11, 0x95, 0x0e, 0x30, 0x94, 0x84, 0x01, 0x08, 0x98, 0x5f, 0xdc, 0xb6,
  0x11, 0x6c, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x04, 0x54, 0x51, 0x10, 0x51,
  0xe9, 0x00, 0x43, 0x49, 0x18, 0x80, 0x80, 0xf9, 0xc8, 0x6d, 0xdb, 0x41,
  0x37, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x44, 0x00, 0x13, 0x11, 0x02, 0xcd,
  0xb0, 0x10, 0x5f, 0xe4, 0x30, 0x1b, 0xd2, 0x0c, 0x48, 0x63, 0x58, 0xc0,
  0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x8b, 0x03, 0x0c, 0x62, 0xf3, 0x50, 0x93,
  0x5f, 0xdc, 0xb6, 0x09, 0x54, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x4d, 0x4e,
  0x44, 0xa0, 0xd4, 0xf4, 0x50, 0x93, 0x5f, 0xdc, 0xb6, 0x15, 0x48, 0xc3,
  0xe5, 0x3b, 0x8f, 0x3f, 0x11, 0xd1, 0x84, 0x00, 0x11, 0xe6, 0x17, 0xb7,
  0x6d, 0x00, 0x04, 0x03, 0x20, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x48, 0x41, 0x53, 0x48, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xba, 0x5f, 0x11, 0x77, 0xca, 0x3c, 0xf8, 0xce, 0x02, 0xd6, 0x9a, 0x28,
  0xfe, 0xb6, 0xa2, 0x74, 0x44, 0x58, 0x49, 0x4c, 0x68, 0x0c, 0x00, 0x00,
  0x66, 0x00, 0x01, 0x00, 0x1a, 0x03, 0x00, 0x00, 0x44, 0x58, 0x49, 0x4c,
  0x06, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x50, 0x0c, 0x00, 0x00,
  0x42, 0x43, 0xc0, 0xde, 0x21, 0x0c, 0x00, 0x00, 0x11, 0x03, 0x00, 0x00,
  0x0b, 0x82, 0x20, 0x00, 0x02, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00,
  0x07, 0x81, 0x23, 0x91, 0x41, 0xc8, 0x04, 0x49, 0x06, 0x10, 0x32, 0x39,
  0x92, 0x01, 0x84, 0x0c, 0x25, 0x05, 0x08, 0x19, 0x1e, 0x04, 0x8b, 0x62,
  0x80, 0x18, 0x45, 0x02, 0x42, 0x92, 0x0b, 0x42, 0xc4, 0x10, 0x32, 0x14,
  0x38, 0x08, 0x18, 0x4b, 0x0a, 0x32, 0x62, 0x88, 0x48, 0x90, 0x14, 0x20,
  0x43, 0x46, 0x88, 0xa5, 0x00, 0x19, 0x32, 0x42, 0xe4, 0x48, 0x0e, 0x90,
  0x11, 0x23, 0xc4, 0x50, 0x41, 0x51, 0x81, 0x8c, 0xe1, 0x83, 0xe5, 0x8a,
  0x04, 0x31, 0x46, 0x06, 0x51, 0x18, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
  0x1b, 0x8c, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x07, 0x40, 0x02, 0xa8, 0x0d,
  0x84, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x20, 0x6d, 0x30, 0x86, 0xff,
  0xff, 0xff, 0xff, 0x1f, 0x00, 0x09, 0xa8, 0x00, 0x49, 0x18, 0x00, 0x00,
  0x03, 0x00, 0x00, 0x00, 0x13, 0x82, 0x60, 0x42, 0x20, 0x4c, 0x08, 0x06,
  0x00, 0x00, 0x00, 0x00, 0x89, 0x20, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x00,
  0x32, 0x22, 0x88, 0x09, 0x20, 0x64, 0x85, 0x04, 0x13, 0x23, 0xa4, 0x84,
  0x04, 0x13, 0x23, 0xe3, 0x84, 0xa1, 0x90, 0x14, 0x12, 0x4c, 0x8c, 0x8c,
  0x0b, 0x84, 0xc4, 0x4c, 0x10, 0x8c, 0xc1, 0x08, 0x40, 0x09, 0x00, 0x0a,
  0x66, 0x00, 0xe6, 0x08, 0xc0, 0x60, 0x8e, 0x00, 0x29, 0xc6, 0x40, 0x10,
  0x44, 0x41, 0x90, 0x51, 0x0c, 0x80, 0x20, 0x88, 0x62, 0x20, 0xe4, 0xa8,
  0xe1, 0xf2, 0x27, 0xec, 0x21, 0x24, 0x9f, 0xdb, 0xa8, 0x62, 0x25, 0x26,
  0xbf, 0xb8, 0x6d, 0x44, 0x0c, 0xc3, 0x30, 0x50, 0x71, 0xcf, 0x70, 0xf9,
  0x13, 0xf6, 0x10, 0x92, 0x1f, 0x02, 0xcd, 0xb0, 0x10, 0x28, 0x58, 0x0a,
  0xa1, 0x10, 0x0c, 0x41, 0xcd, 0x51, 0xc3, 0xe5, 0x4f, 0xd8, 0x43, 0x48,
  0x3e, 0xb7, 0x51, 0xc5, 0x4a, 0x4c, 0x3e, 0x72, 0xdb, 0x88, 0x20, 0x08,
  0x82, 0x28, 0xc4, 0x43, 0x30, 0x04, 0x41, 0xa5, 0x18, 0x88, 0x61, 0x18,
  0x48, 0xba, 0x6d, 0xb8, 0xfc, 0x09, 0x7b, 0x08, 0xc9, 0x5f, 0x09, 0xc9,
  0xa1, 0x22, 0x81, 0x48, 0x23, 0xe7, 0x21, 0xa2, 0x09, 0x21, 0x24, 0x24,
  0x10, 0x44, 0x21, 0x18, 0x82, 0xa1, 0xa8, 0x3a, 0x68, 0xb8, 0xfc, 0x09,
  0x7b, 0x08, 0xc9, 0x5f, 0x09, 0x69, 0x43, 0x9a, 0x01, 0x11, 0x04, 0x41,
  0x14, 0x73, 0x04, 0x41, 0x29, 0x18, 0xe2, 0x22, 0x30, 0xca, 0x06, 0x02,
  0x86, 0x11, 0x88, 0x21, 0x09, 0xb8, 0x14, 0xe0, 0x8e, 0x3a, 0x1c, 0x69,
  0x5a, 0x00, 0xcc, 0xa1, 0x26, 0x1f, 0x5c, 0x9c, 0x00, 0x58, 0x24, 0x76,
  0x43, 0x48, 0xd7, 0x0d, 0x04, 0x41, 0x70, 0x1e, 0x7d, 0xa9, 0x41, 0x4c,
  0x01, 0x00, 0x00, 0x00, 0x13, 0x14, 0x72, 0xc0, 0x87, 0x74, 0x60, 0x87,
  0x36, 0x68, 0x87, 0x79, 0x68, 0x03, 0x72, 0xc0, 0x87, 0x0d, 0xaf, 0x50,
  0x0e, 0x6d, 0xd0, 0x0e, 0x7a, 0x50, 0x0e, 0x6d, 0x00, 0x0f, 0x7a, 0x30,
  0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x71, 0xa0,
  0x07, 0x73, 0x20, 0x07, 0x6d, 0x90, 0x0e, 0x78, 0xa0, 0x07, 0x73, 0x20,
  0x07, 0x6d, 0x90, 0x0e, 0x71, 0x60, 0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0,
  0x06, 0xe9, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x90,
  0x0e, 0x76, 0x40, 0x07, 0x7a, 0x60, 0x07, 0x74, 0xd0, 0x06, 0xe6, 0x10,
  0x07, 0x76, 0xa0, 0x07, 0x73, 0x20, 0x07, 0x6d, 0x60, 0x0e, 0x73, 0x20,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xd0, 0x06, 0xe6, 0x60, 0x07, 0x74, 0xa0,
  0x07, 0x76, 0x40, 0x07, 0x6d, 0xe0, 0x0e, 0x78, 0xa0, 0x07, 0x71, 0x60,
  0x07, 0x7a, 0x30, 0x07, 0x72, 0xa0, 0x07, 0x76, 0x40, 0x07, 0x43, 0x9e,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86,
  0x3c, 0x06, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x0c, 0x79, 0x10, 0x20, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x18, 0xf2, 0x34, 0x40, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x30, 0xe4, 0x81, 0x80, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x60, 0xc8, 0x23, 0x01, 0x01, 0x10, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x90, 0xa7, 0x02, 0x02, 0x20, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x21, 0x4f, 0x06, 0x04, 0x40, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x59, 0x20, 0x00, 0x00, 0x00,
  0x15, 0x00, 0x00, 0x00, 0x32, 0x1e, 0x98, 0x14, 0x19, 0x11, 0x4c, 0x90,
  0x8c, 0x09, 0x26, 0x47, 0xc6, 0x04, 0x43, 0x22, 0x4a, 0xa0, 0x18, 0xca,
  0x61, 0x04, 0xa0, 0x00, 0x07, 0xca, 0xa0, 0x08, 0x0a, 0xa1, 0x14, 0xca,
  0x83, 0x8a, 0x92, 0x18, 0x01, 0x28, 0x83, 0x22, 0x28, 0x04, 0x02, 0x67,
  0x00, 0x28, 0x1c, 0x4b, 0xc3, 0xa0, 0xe7, 0x79, 0x00, 0x58, 0x01, 0x2b,
  0x00, 0x80, 0x15, 0xb0, 0x02, 0x00, 0x58, 0x01, 0x2b, 0x00, 0x80, 0x15,
  0xb0, 0x02, 0x00, 0x10, 0x24, 0x40, 0x10, 0x01, 0x41, 0x08, 0x04, 0xc1,
  0x00, 0x00, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x76, 0x00, 0x00, 0x00,
  0x1a, 0x03, 0x4c, 0x90, 0x46, 0x02, 0x13, 0xc4, 0x8e, 0x0c, 0x6f, 0xec,
  0xed, 0x4d, 0x0c, 0x24, 0xc6, 0xe5, 0xc6, 0x45, 0x66, 0x06, 0x06, 0xc7,
  0xe5, 0x06, 0x04, 0xc5, 0x26, 0xa7, 0xac, 0x86, 0xa6, 0x4c, 0x26, 0x07,
  0x26, 0x65, 0x43, 0x10, 0x4c, 0x10, 0x08, 0x64, 0x82, 0x40, 0x24, 0x1b,
  0x84, 0x81, 0x98, 0x20, 0x10, 0xca, 0x06, 0x61, 0x30, 0x28, 0xd8, 0xcd,
  0x6d, 0x18, 0x10, 0x82, 0x98, 0x20, 0x10, 0xcb, 0x04, 0x01, 0x0c, 0x2e,
  0x02, 0x13, 0x04, 0x82, 0xd9, 0x80, 0x28, 0x0b, 0xa3, 0x28, 0x43, 0x03,
  0x6c, 0x08, 0x9c, 0x0d, 0x04, 0x00, 0x3c, 0xc0, 0x04, 0x21, 0x0c, 0xb0,
  0x0d, 0x41, 0x34, 0x41, 0x10, 0x00, 0x12, 0x6d, 0x61, 0x69, 0x6e, 0x44,
  0xa0, 0x9e, 0xa6, 0x92, 0xa8, 0x92, 0x9e, 0x9c, 0x26, 0x08, 0x85, 0x34,
  0x41, 0x28, 0xa6, 0x0d, 0x81, 0x32, 0x41, 0x28, 0xa8, 0x09, 0x02, 0xd1,
  0x6c, 0x10, 0x34, 0x63, 0xc3, 0xa2, 0x54, 0xd6, 0x85, 0x5d, 0x43, 0xa6,
  0x5c, 0x1b, 0x11, 0xaa, 0x22, 0xac, 0xa1, 0xa7, 0x27, 0x29, 0xa2, 0x09,
  0x42, 0x51, 0x6d, 0x10, 0x34, 0x6d, 0xc3, 0x32, 0x74, 0xd6, 0x85, 0x5d,
  0x83, 0x37, 0x5c, 0xdf, 0x04, 0x81, 0x70, 0x36, 0x04, 0xc3, 0x86, 0x25,
  0x0c, 0x3a, 0xeb, 0x12, 0x83, 0x6b, 0xf0, 0xc2, 0xe0, 0xfa, 0x36, 0x04,
  0x61, 0xb0, 0x61, 0xd1, 0x3a, 0xeb, 0x22, 0x83, 0x6b, 0xf0, 0xb4, 0xeb,
  0x9b, 0x20, 0x10, 0xcf, 0x86, 0x40, 0xdb, 0xb0, 0x98, 0x41, 0x67, 0x5d,
  0x67, 0x70, 0x0d, 0x9e, 0x19, 0x5c, 0xdf, 0x04, 0x81, 0x80, 0x58, 0x0c,
  0x3d, 0x31, 0x3d, 0x49, 0x4d, 0x10, 0x0a, 0x6b, 0x82, 0x40, 0x44, 0x1b,
  0x04, 0x8d, 0x0d, 0x36, 0x2c, 0x69, 0xa0, 0x06, 0xd6, 0x85, 0x5d, 0xc3,
  0x1a, 0xa4, 0xc1, 0xd5, 0x06, 0x1b, 0x0c, 0x0e, 0x0c, 0xc6, 0xa0, 0x0c,
  0xd0, 0xc0, 0x0d, 0xb8, 0x4c, 0x59, 0x7d, 0x41, 0xbd, 0xcd, 0xa5, 0xd1,
  0xa5, 0xbd, 0xb9, 0x6d, 0x58, 0x14, 0x38, 0xb0, 0x32, 0x6c, 0x0d, 0x86,
  0x35, 0x50, 0xae, 0x36, 0xd8, 0xb0, 0x0c, 0x9d, 0x75, 0x61, 0xde, 0xe0,
  0x0d, 0xd7, 0xb7, 0x61, 0x09, 0x83, 0xce, 0xba, 0xc4, 0xc0, 0x1b, 0xbc,
  0xc1, 0xfb, 0x36, 0x2c, 0x5a, 0x67, 0x5d, 0x64, 0xe0, 0x0d, 0x5e, 0x18,
  0x5c, 0xdf, 0x86, 0xc5, 0x0c, 0xd4, 0xc0, 0xba, 0x30, 0x6f, 0x58, 0x03,
  0xed, 0x6a, 0x83, 0x0d, 0x45, 0x1c, 0xc8, 0xc1, 0x1c, 0xd0, 0x41, 0x1d,
  0x6c, 0x18, 0xde, 0xc0, 0x0e, 0x80, 0x0d, 0xc5, 0x44, 0xdd, 0x01, 0x04,
  0x54, 0x61, 0x63, 0xb3, 0x6b, 0x73, 0x49, 0x23, 0x2b, 0x73, 0xa3, 0x9b,
  0x12, 0x04, 0x55, 0xc8, 0xf0, 0x5c, 0xec, 0xca, 0xe4, 0xe6, 0xd2, 0xde,
  0xdc, 0xa6, 0x04, 0x44, 0x13, 0x32, 0x3c, 0x17, 0xbb, 0x30, 0x36, 0xbb,
  0x32, 0xb9, 0x29, 0x81, 0x51, 0x87, 0x0c, 0xcf, 0x65, 0x0e, 0x2d, 0x8c,
  0xac, 0x4c, 0xae, 0xe9, 0x8d, 0xac, 0x8c, 0x6d, 0x4a, 0x80, 0x94, 0x21,
  0xc3, 0x73, 0x91, 0x2b, 0x9b, 0x7b, 0xab, 0x93, 0x1b, 0x2b, 0x9b, 0x9b,
  0x12, 0x3c, 0x75, 0xc8, 0xf0, 0x5c, 0xec, 0xd2, 0xca, 0xee, 0x92, 0xc8,
  0xa6, 0xe8, 0xc2, 0xe8, 0xca, 0xa6, 0x04, 0x51, 0x1d, 0x32, 0x3c, 0x97,
  0x32, 0x37, 0x3a, 0xb9, 0x3c, 0xa8, 0xb7, 0x34, 0x37, 0xba, 0xb9, 0x29,
  0xc1, 0x1d, 0x00, 0x00, 0x79, 0x18, 0x00, 0x00, 0x51, 0x00, 0x00, 0x00,
  0x33, 0x08, 0x80, 0x1c, 0xc4, 0xe1, 0x1c, 0x66, 0x14, 0x01, 0x3d, 0x88,
  0x43, 0x38, 0x84, 0xc3, 0x8c, 0x42, 0x80, 0x07, 0x79, 0x78, 0x07, 0x73,
  0x98, 0x71, 0x0c, 0xe6, 0x00, 0x0f, 0xed, 0x10, 0x0e, 0xf4, 0x80, 0x0e,
  0x33, 0x0c, 0x42, 0x1e, 0xc2, 0xc1, 0x1d, 0xce, 0xa1, 0x1c, 0x66, 0x30,
  0x05, 0x3d, 0x88, 0x43, 0x38, 0x84, 0x83, 0x1b, 0xcc, 0x03, 0x3d, 0xc8,
  0x43, 0x3d, 0x8c, 0x03, 0x3d, 0xcc, 0x78, 0x8c, 0x74, 0x70, 0x07, 0x7b,
  0x08, 0x07, 0x79, 0x48, 0x87, 0x70, 0x70, 0x07, 0x7a, 0x70, 0x03, 0x76,
  0x78, 0x87, 0x70, 0x20, 0x87, 0x19, 0xcc, 0x11, 0x0e, 0xec, 0x90, 0x0e,
  0xe1, 0x30, 0x0f, 0x6e, 0x30, 0x0f, 0xe3, 0xf0, 0x0e, 0xf0, 0x50, 0x0e,
  0x33, 0x10, 0xc4, 0x1d, 0xde, 0x21, 0x1c, 0xd8, 0x21, 0x1d, 0xc2, 0x61,
  0x1e, 0x66, 0x30, 0x89, 0x3b, 0xbc, 0x83, 0x3b, 0xd0, 0x43, 0x39, 0xb4,
  0x03, 0x3c, 0xbc, 0x83, 0x3c, 0x84, 0x03, 0x3b, 0xcc, 0xf0, 0x14, 0x76,
  0x60, 0x07, 0x7b, 0x68, 0x07, 0x37, 0x68, 0x87, 0x72, 0x68, 0x07, 0x37,
  0x80, 0x87, 0x70, 0x90, 0x87, 0x70, 0x60, 0x07, 0x76, 0x28, 0x07, 0x76,
  0xf8, 0x05, 0x76, 0x78, 0x87, 0x77, 0x80, 0x87, 0x5f, 0x08, 0x87, 0x71,
  0x18, 0x87, 0x72, 0x98, 0x87, 0x79, 0x98, 0x81, 0x2c, 0xee, 0xf0, 0x0e,
  0xee, 0xe0, 0x0e, 0xf5, 0xc0, 0x0e, 0xec, 0x30, 0x03, 0x62, 0xc8, 0xa1,
  0x1c, 0xe4, 0xa1, 0x1c, 0xcc, 0xa1, 0x1c, 0xe4, 0xa1, 0x1c, 0xdc, 0x61,
  0x1c, 0xca, 0x21, 0x1c, 0xc4, 0x81, 0x1d, 0xca, 0x61, 0x06, 0xd6, 0x90,
  0x43, 0x39, 0xc8, 0x43, 0x39, 0x98, 0x43, 0x39, 0xc8, 0x43, 0x39, 0xb8,
  0xc3, 0x38, 0x94, 0x43, 0x38, 0x88, 0x03, 0x3b, 0x94, 0xc3, 0x2f, 0xbc,
  0x83, 0x3c, 0xfc, 0x82, 0x3b, 0xd4, 0x03, 0x3b, 0xb0, 0xc3, 0x0c, 0xc4,
  0x21, 0x07, 0x7c, 0x70, 0x03, 0x7a, 0x28, 0x87, 0x76, 0x80, 0x87, 0x19,
  0xd1, 0x43, 0x0e, 0xf8, 0xe0, 0x06, 0xe4, 0x20, 0x0e, 0xe7, 0xe0, 0x06,
  0xf6, 0x10, 0x0e, 0xf2, 0xc0, 0x0e, 0xe1, 0x90, 0x0f, 0xef, 0x50, 0x0f,
  0xf4, 0x30, 0x83, 0x81, 0xc8, 0x01, 0x1f, 0xdc, 0x40, 0x1c, 0xe4, 0xa1,
  0x1c, 0xc2, 0x61, 0x1d, 0xdc, 0x40, 0x1c, 0xe4, 0x01, 0x00, 0x00, 0x00,
  0x71, 0x20, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00, 0x66, 0x40, 0x0d, 0x97,
  0xef, 0x3c, 0x3e, 0xd0, 0x34, 0xce, 0x04, 0x4c, 0x44, 0x08, 0x34, 0xc3,
  0x42, 0xd8, 0xc0, 0x36, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x40, 0x15, 0x05,
  0x11, 0x95, 0x0e, 0x30, 0x94, 0x84, 0x01, 0x08, 0x98, 0x5f, 0xdc, 0xb6,
  0x11, 0x6c, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x04, 0x54, 0x51, 0x10, 0x51,
  0xe9, 0x00, 0x43, 0x49, 0x18, 0x80, 0x80, 0xf9, 0xc8, 0x6d, 0xdb, 0x41,
  0x37, 0x5c, 0xbe, 0xf3, 0xf8, 0x42, 0x44, 0x00, 0x13, 0x11, 0x02, 0xcd,
  0xb0, 0x10, 0x5f, 0xe4, 0x30, 0x1b, 0xd2, 0x0c, 0x48, 0x63, 0x58, 0xc0,
  0x34, 0x5c, 0xbe, 0xf3, 0xf8, 0x8b, 0x03, 0x0c, 0x62, 0xf3, 0x50, 0x93,
  0x5f, 0xdc, 0xb6, 0x09, 0x54, 0xc3, 0xe5, 0x3b, 0x8f, 0x2f, 0x4d, 0x4e,
  0x44, 0xa0, 0xd4, 0xf4, 0x50, 0x93, 0x5f, 0xdc, 0xb6, 0x15, 0x48, 0xc3,
  0xe5, 0x3b, 0x8f, 0x3f, 0x11, 0xd1, 0x84, 0x00, 0x11, 0xe6, 0x17, 0xb7,
  0x6d, 0x00, 0x04, 0x03, 0x20, 0x0d, 0x00, 0x00, 0x61, 0x20, 0x00, 0x00,
  0x68, 0x01, 0x00, 0x00, 0x13, 0x04, 0x50, 0x2c, 0x10, 0x00, 0x00, 0x00,
  0x0a, 0x00, 0x00, 0x00, 0x44, 0x94, 0xdd, 0x0c, 0x40, 0x71, 0x15, 0x45,
  0x59, 0x14, 0x4f, 0x41, 0x94, 0xec, 0x40, 0xc1, 0x0e, 0x94, 0x06, 0x15,
  0x25, 0x40, 0xd8, 0x08, 0x00, 0x5d, 0x73, 0x10, 0xcb, 0xb2, 0x54, 0x44,
  0xcd, 0x21, 0x88, 0x01, 0x03, 0x00, 0x00, 0x00, 0x23, 0x06, 0x08, 0x00,
  0x82, 0x60, 0x90, 0x81, 0xc1, 0x21, 0x70, 0xc3, 0x88, 0xc1, 0x01, 0x80,
  0x20, 0x18, 0x54, 0x62, 0x70, 0x04, 0xc2, 0x88, 0x41, 0x02, 0x80, 0x20,
  0x18, 0x18, 0x68, 0xa0, 0x65, 0x9e, 0xf5, 0x8c, 0x18, 0x24, 0x00, 0x08,
  0x82, 0x81, 0x91, 0x06, 0x9b, 0xf6, 0x1d, 0xd0, 0x88, 0x41, 0x02, 0x80,
  0x20, 0x18, 0x18, 0x6a, 0xc0, 0x6d, 0x60, 0x60, 0x45, 0x23, 0x06, 0x09,
  0x00, 0x82, 0x60, 0x60, 0xac, 0x41, 0xc7, 0x85, 0x01, 0x26, 0x8d, 0x18,
  0x24, 0x00, 0x08, 0x82, 0x81, 0xc1, 0x06, 0x9e, 0x27, 0x06, 0xda, 0x34,
  0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x46, 0x1b, 0x7c, 0xdf, 0x18, 0x2c,
  0xd4, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x6e, 0x00, 0x06, 0x62,
  0x40, 0x06, 0x5c, 0x35, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0xc6, 0x1b,
  0x84, 0xc1, 0x18, 0x94, 0x41, 0x63, 0x8d, 0x18, 0x24, 0x00, 0x08, 0x82,
  0x81, 0x01, 0x07, 0x62, 0x30, 0x06, 0x66, 0xe0, 0x5d, 0x23, 0x06, 0x09,
  0x00, 0x82, 0x60, 0x60, 0xc4, 0xc1, 0x18, 0x90, 0xc1, 0x19, 0x3c, 0xd8,
  0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x18, 0x72, 0x40, 0x06, 0x6b, 0x80,
  0x06, 0x60, 0x90, 0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0x31, 0x07,
  0x65, 0xc0, 0x06, 0x69, 0x10, 0x69, 0x23, 0x06, 0x09, 0x00, 0x82, 0x60,
  0x60, 0xd0, 0x81, 0x19, 0xa8, 0x81, 0x1a, 0x88, 0xc1, 0x36, 0x62, 0x90,
  0x00, 0x20, 0x08, 0x06, 0x46, 0x1d, 0x9c, 0xc1, 0x1a, 0xac, 0xc1, 0xc4,
  0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x81, 0x61, 0x07, 0x68, 0xc0, 0x06,
  0x6c, 0x20, 0x06, 0xdd, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x34, 0x75,
  0xf0, 0x41, 0x6d, 0x30, 0x9a, 0x10, 0x00, 0xa3, 0x09, 0x42, 0x30, 0x9a,
  0x30, 0x08, 0xa3, 0x09, 0xc4, 0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06,
  0x8d, 0x1e, 0x90, 0x41, 0x55, 0x07, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20,
  0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40, 0x0c, 0x23, 0x06, 0x07, 0x00,
  0x82, 0x60, 0xd0, 0xfc, 0x41, 0x1a, 0x68, 0x74, 0x30, 0x9a, 0x10, 0x00,
  0xa3, 0x09, 0x42, 0x30, 0x9a, 0x30, 0x08, 0xa3, 0x09, 0xc4, 0x30, 0x62,
  0x70, 0x00, 0x20, 0x08, 0x06, 0x0d, 0x29, 0xb8, 0xc1, 0xa7, 0x07, 0xa3,
  0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83, 0x30, 0x9a, 0x40,
  0x0c, 0x23, 0x06, 0x07, 0x00, 0x82, 0x60, 0xd0, 0xa4, 0xc2, 0x1c, 0x90,
  0x41, 0x1f, 0x8c, 0x26, 0x04, 0xc0, 0x68, 0x82, 0x10, 0x8c, 0x26, 0x0c,
  0xc2, 0x88, 0xc1, 0x01, 0x80, 0x20, 0x18, 0x34, 0xad, 0x70, 0x07, 0x68,
  0x00, 0x0a, 0xa3, 0x09, 0x01, 0x30, 0x9a, 0x20, 0x04, 0xa3, 0x09, 0x83,
  0x30, 0x62, 0x70, 0x00, 0x20, 0x08, 0x06, 0x4d, 0x2c, 0xec, 0x01, 0x1b,
  0xac, 0xc2, 0x68, 0x42, 0x00, 0x8c, 0x26, 0x08, 0xc1, 0x68, 0xc2, 0x20,
  0xd8, 0x32, 0x06, 0xf2, 0x19, 0x31, 0x40, 0x00, 0x10, 0x04, 0x03, 0x89,
  0x16, 0xfc, 0x60, 0x0c, 0x90, 0x60, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c,
  0xa4, 0x5a, 0xf8, 0x83, 0x31, 0x28, 0x02, 0x6b, 0xcc, 0x40, 0x3e, 0x23,
  0x06, 0x08, 0x00, 0x82, 0x60, 0x20, 0xdd, 0x42, 0x28, 0x98, 0x81, 0x12,
  0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x81, 0x84, 0x0b, 0xa2, 0x60, 0x06,
  0x47, 0x60, 0x4f, 0x1a, 0xc8, 0x67, 0xc4, 0x00, 0x01, 0x40, 0x10, 0x0c,
  0x24, 0x5d, 0x20, 0x85, 0x34, 0x60, 0x82, 0x11, 0x03, 0x04, 0x00, 0x41,
  0x30, 0x90, 0x76, 0xa1, 0x14, 0xd2, 0x20, 0x09, 0xec, 0x40, 0x03, 0xf9,
  0x8c, 0x18, 0x20, 0x00, 0x08, 0x82, 0x81, 0xd4, 0x0b, 0xa7, 0x50, 0x90,
  0x41, 0x30, 0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x92, 0x2f, 0xa0, 0xc2,
  0x00, 0x06, 0x81, 0x05, 0x1c, 0x74, 0x6c, 0x59, 0x03, 0xf9, 0x8c, 0x18,
  0x20, 0x00, 0x08, 0x82, 0x81, 0x14, 0x0e, 0xab, 0x90, 0x9c, 0x41, 0x30,
  0x62, 0x80, 0x00, 0x20, 0x08, 0x06, 0x92, 0x38, 0xb0, 0xc2, 0x31, 0x06,
  0x81, 0x05, 0x1f, 0x74, 0xec, 0x71, 0x03, 0xf9, 0x8c, 0x18, 0x20, 0x00,
  0x08, 0x82, 0x81, 0x54, 0x0e, 0xaf, 0xd0, 0xa8, 0x41, 0x30, 0x62, 0x80,
  0x00, 0x20, 0x08, 0x06, 0x92, 0x39, 0xc0, 0xc2, 0x62, 0x06, 0x81, 0x05,
  0x62, 0x00, 0x1d, 0x9b, 0xe2, 0x40, 0x3e, 0x23, 0x06, 0x08, 0x00, 0x82,
  0x60, 0x20, 0xa5, 0xc3, 0x2c, 0x44, 0x6d, 0x10, 0x8c, 0x18, 0x20, 0x00,
  0x08, 0x82, 0x81, 0xa4, 0x0e, 0xb4, 0xf0, 0xa4, 0x41, 0x60, 0x41, 0x19,
  0x40, 0x67, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0xa0, 0x76, 0xc0, 0x85,
  0x54, 0x90, 0x85, 0xd1, 0x84, 0x20, 0xa8, 0xa0, 0x16, 0x70, 0x98, 0x84,
  0x08, 0x82, 0x86, 0x40, 0x04, 0x67, 0x18, 0x31, 0x38, 0x00, 0x10, 0x04,
  0x83, 0x26, 0x1e, 0x76, 0x81, 0x15, 0x70, 0x61, 0x34, 0x21, 0x00, 0x46,
  0x13, 0x84, 0xc0, 0x04, 0x52, 0x80, 0x8f, 0x09, 0xa4, 0x00, 0x9f, 0x59,
  0x82, 0x62, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0x1a, 0x7b, 0x00, 0x87,
  0x58, 0xe8, 0x85, 0xd1, 0x84, 0x40, 0x18, 0x4d, 0x10, 0x06, 0x13, 0x56,
  0x01, 0x3e, 0x26, 0xac, 0x02, 0x7c, 0x66, 0x09, 0x8a, 0x11, 0x83, 0x03,
  0x00, 0x41, 0x30, 0x68, 0xf6, 0xa1, 0x1c, 0x6c, 0x21, 0x1c, 0x46, 0x13,
  0x02, 0x60, 0x34, 0x41, 0x08, 0x4c, 0x90, 0x05, 0xf8, 0x98, 0x20, 0x0b,
  0xf0, 0x99, 0x25, 0x28, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xa0, 0x01,
  0x09, 0x75, 0xd8, 0x05, 0x73, 0x18, 0x4d, 0x08, 0x84, 0xd1, 0x04, 0x61,
  0x30, 0x21, 0x17, 0xe0, 0x63, 0x42, 0x2e, 0xc0, 0x67, 0x96, 0xa0, 0x18,
  0x28, 0x19, 0xc4, 0x20, 0x70, 0x06, 0x4c, 0x20, 0x88, 0x81, 0x92, 0x41,
  0x0c, 0x02, 0x67, 0xc0, 0x04, 0x82, 0x18, 0x4d, 0xc8, 0x84, 0x0a, 0xda,
  0x01, 0x87, 0x49, 0x88, 0xc0, 0x68, 0x12, 0xe4, 0x70, 0x90, 0x11, 0x83,
  0x03, 0x00, 0x41, 0x30, 0x68, 0x52, 0x62, 0x1e, 0xc8, 0x01, 0x1e, 0x46,
  0x13, 0x02, 0x60, 0x34, 0x41, 0x08, 0x4c, 0xe0, 0x05, 0xf8, 0x98, 0xc0,
  0x0b, 0xf0, 0x99, 0x25, 0x50, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xa0,
  0x71, 0x09, 0x7c, 0x48, 0x87, 0x7a, 0x18, 0x4d, 0x08, 0x84, 0xd1, 0x04,
  0x61, 0x30, 0x61, 0x1c, 0xe0, 0x63, 0xc2, 0x38, 0xc0, 0x67, 0x96, 0x40,
  0x19, 0x31, 0x38, 0x00, 0x10, 0x04, 0x83, 0x66, 0x26, 0xfa, 0xc1, 0x1d,
  0xf2, 0x61, 0x34, 0x21, 0x00, 0x46, 0x13, 0x84, 0xc0, 0x04, 0x75, 0x80,
  0x8f, 0x09, 0xea, 0x00, 0x9f, 0x59, 0x02, 0x65, 0xc4, 0xe0, 0x00, 0x40,
  0x10, 0x0c, 0x1a, 0x9c, 0x10, 0x89, 0x79, 0xf0, 0x87, 0xd1, 0x84, 0x40,
  0x18, 0x4d, 0x10, 0x06, 0x13, 0xe2, 0x01, 0x3e, 0x26, 0xc4, 0x03, 0x7c,
  0x66, 0x09, 0x94, 0x81, 0x92, 0x41, 0x0c, 0x0c, 0x07, 0xc1, 0x0e, 0x22,
  0x19, 0x28, 0x19, 0xc4, 0xc0, 0x70, 0x10, 0xec, 0x20, 0x92, 0xd1, 0x84,
  0x38, 0x18, 0x2a, 0x28, 0x09, 0x1c, 0x26, 0x21, 0x82, 0xa5, 0x71, 0x10,
  0xc6, 0x69, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xa0, 0x09, 0x8b, 0x95,
  0xe0, 0x07, 0x94, 0x18, 0x4d, 0x08, 0x80, 0xd1, 0x04, 0x21, 0x30, 0x81,
  0x1e, 0xe0, 0x63, 0x02, 0x3d, 0xc0, 0x67, 0x96, 0xe0, 0x19, 0x31, 0x38,
  0x00, 0x10, 0x04, 0x83, 0xc6, 0x2c, 0x60, 0x22, 0x24, 0x5a, 0x62, 0x34,
  0x21, 0x10, 0x46, 0x13, 0x84, 0xc1, 0x84, 0x7d, 0x80, 0x8f, 0x09, 0xfb,
  0x00, 0x9f, 0x59, 0x82, 0x67, 0xc4, 0xe0, 0x00, 0x40, 0x10, 0x0c, 0x9a,
  0xb5, 0xa8, 0x09, 0x93, 0x88, 0x89, 0xd1, 0x84, 0x00, 0x18, 0x4d, 0x10,
  0x02, 0x13, 0x44, 0x02, 0x3e, 0x26, 0x88, 0x04, 0x7c, 0x66, 0x09, 0x9e,
  0x11, 0x83, 0x03, 0x00, 0x41, 0x30, 0x68, 0xe0, 0x42, 0x27, 0x56, 0xc2,
  0x26, 0x46, 0x13, 0x02, 0x61, 0x34, 0x41, 0x18, 0x4c, 0x48, 0x09, 0xf8,
  0x98, 0x90, 0x12, 0xf0, 0x99, 0x25, 0x78, 0x06, 0x4a, 0x06, 0x31, 0x58,
  0x9c, 0x06, 0x63, 0x08, 0x67, 0xa0, 0x64, 0x10, 0x83, 0xc5, 0x69, 0x30,
  0x86, 0x70, 0x46, 0x0c, 0x0e, 0x00, 0x04, 0xc1, 0xa0, 0xb9, 0x8b, 0xb0,
  0x90, 0x89, 0x9d, 0x18, 0x4d, 0x08, 0x00, 0x0b, 0x66, 0x42, 0x3e, 0x26,
  0xcc, 0x84, 0x7c, 0x6c, 0x98, 0x09, 0xf9, 0x8c, 0x18, 0x24, 0x00, 0x08,
  0x82, 0x01, 0xd2, 0x17, 0x6f, 0x41, 0x17, 0x74, 0xc1, 0x16, 0xbb, 0x30,
  0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x48, 0x5f, 0xbc, 0x05, 0x5d, 0xd0,
  0x05, 0x4f, 0xdc, 0xc2, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x20, 0x7d,
  0xf1, 0x16, 0x74, 0x41, 0x17, 0x6a, 0x31, 0x0b, 0x23, 0x06, 0x09, 0x00,
  0x82, 0x60, 0x80, 0xf4, 0xc5, 0x5b, 0xd0, 0x05, 0x5d, 0xac, 0xc5, 0x2b,
  0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0xd2, 0x17, 0x6f, 0x71, 0x17,
  0x74, 0xc1, 0x16, 0x77, 0x30, 0x62, 0x90, 0x00, 0x20, 0x08, 0x06, 0x48,
  0x5f, 0xbc, 0xc5, 0x5d, 0xd0, 0x05, 0x4f, 0xd8, 0xc1, 0x88, 0x41, 0x02,
  0x80, 0x20, 0x18, 0x20, 0x7d, 0xf1, 0x16, 0x71, 0x41, 0x17, 0x6c, 0xf1,
  0x8d, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0xd2, 0x17, 0x6f, 0x11, 0x17,
  0x74, 0xc1, 0x13, 0xde, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18, 0x20, 0x7d,
  0xf1, 0x16, 0x72, 0x41, 0x17, 0x6c, 0x71, 0x8c, 0x18, 0x24, 0x00, 0x08,
  0x82, 0x01, 0xd2, 0x17, 0x6f, 0x21, 0x17, 0x74, 0xc1, 0x13, 0xc6, 0x88,
  0x41, 0x02, 0x80, 0x20, 0x18, 0x20, 0x7d, 0xf1, 0x16, 0x70, 0x41, 0x17,
  0x6c, 0x31, 0x8c, 0x18, 0x24, 0x00, 0x08, 0x82, 0x01, 0xd2, 0x17, 0x6f,
  0x01, 0x17, 0x74, 0xc1, 0x13, 0xc2, 0x88, 0x41, 0x02, 0x80, 0x20, 0x18,
  0x20, 0x7d, 0xf1, 0x16, 0x70, 0x41, 0x17, 0x6a, 0x11, 0x8c, 0x18, 0x24,
  0x00, 0x08, 0x82, 0x01, 0xd2, 0x17, 0x6f, 0x01, 0x17, 0x74, 0xb1, 0x16,
  0x33, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
